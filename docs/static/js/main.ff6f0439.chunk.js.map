{"version":3,"sources":["context/userContext.js","components/team-list-paper.js","views/Home.js","views/Team.js","data-access/bitbucket-api-helper.js","data-access/createRepoProcess.js","views/CreateRepo.js","views/TeamProjects.js","serviceWorker.js","index.js","data-access/request-layer.js","data-access/readme-files.js","data-access/config.js","data-access/ssh-known-hosts.js"],"names":["userContext","createContext","TeamListPaper","props","console","log","to","url","className","info","CardMedia","image","links","avatar","href","display_name","Home","useContext","user","setUser","useState","apiError","setApiError","useEffect","a","process","window","localStorage","getItem","GetAccesTokenFromCode","URLSearchParams","location","search","get","then","data","userData","catch","e","RefreshToken","GetTeamsOfUser","userTeams","removeItem","GetIntialInformation","Paper","elevation","size","values","map","key","uuid","CircularProgress","Team","teamDetails","setTeamDetails","GetTeamById","match","params","teamId","CreateRepo","ViewProject","ViewTeam","html","CreateProjectBody","CreateRepoBody","CreateBranchBody","BranchingModelBody","BranchRestrictionsBody","EnablePipelineBody","ShuffleString","s","arr","split","sort","Math","random","join","CheckIfProjectExists","TeamProjects","GetProjectsOfTeam","data1","push","x","ceil","parseFloat","data2","ProjectDetails","reduce","c","name","includes","AccountName","orgId","CreateNewProject","slice","toUpperCase","CreateProject","CreateProjectData","CreateRepository","projectData","project","ProjectName","create","CreateRepoProcess","val","UpdateStatus","type","Message","Project","length","repoCreateData","JSON","stringify","error","CommitReadmeFile","GetBranch","RepoBranchesDetails","Error","target","hash","CreateBranch","ConfigureBranchingModel","CreateBranchRestrictions","kind","branch_type","Config","Bitbucket","DefaultReviewers","AssignDefaultReviewers","EnablePipelines","SSHKeys","AddKnownHosts","hostname","org","account","repoDetails","setRepoDetails","TextFieldError","setTextFieldError","InProgress","status","setStatus","HandleStatusChange","Value","NewStatus","handleInputChange","id","value","startRepoCreationProcess","InvalidInput","replace","toLowerCase","finally","NewError","TextField","onChange","label","helperText","Button","disabled","variant","color","onClick","v","Boolean","ReactDOM","render","Provider","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","api","axios","baseURL","timeout","headers","CatchAxiosError","ErrorObject","response","code","method","Endpoints","Buffer","ClientId","ClientSecret","toString","qs","grant_type","setItem","CallbackFunction","refresh_token","parse","access_token","role","pageNumber","page","body","projectName","GetRepo","repoId","DefaultReadme","userName"],"mappings":"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","file":"static/js/main.ff6f0439.chunk.js","sourcesContent":["import {createContext} from 'react'\n\nconst userContext = createContext(null)\n\nexport { userContext }","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { Link } from \"react-router-dom\";\nimport CardMedia from '@material-ui/core/CardMedia';\nimport './css/team-list-paper.css'\n\nexport default function TeamListPaper(props) {\n    console.log(props)\n    return (\n        <Link to={props.url}>\n            <div className=\"root-teamlist\">\n                <div className={\"data-image\"}>\n                    {props.info\n                        ? <CardMedia\n                            className=\"data-image-content\"\n                            image={props.info.links.avatar.href}\n                        /> : \"\"\n                    }\n                </div>\n                <div className=\"data-content\">\n                    {props.display_name}\n                    <p>{}</p>\n                </div>\n            </div>\n        </Link>\n    );\n}","import React, { useState, useEffect, useContext } from 'react';\nimport { userContext } from '../context/userContext'\nimport { GetAccesTokenFromCode, GetTeamsOfUser, RefreshToken } from '../data-access/request-layer'\nimport TeamListPaper from '../components/team-list-paper'\nimport Paper from '@material-ui/core/Paper';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './css/Home.css';\n\nexport default function Home() {\n  const { user, setUser } = useContext(userContext)\n  const [apiError, setApiError] = useState(null)\n  useEffect(() => {\n    const GetIntialInformation = async () => {\n      try {\n        console.log(process.env)\n        !window.localStorage.getItem(process.env.REACT_APP_CLIENT_CONSUMER_ID)\n          ? await GetAccesTokenFromCode(new URLSearchParams(window.location.search).get('code')).then(data => {\n            setUser({ userData: data })\n          }).catch(e => { throw e })\n          : await RefreshToken().then(data => {\n            setUser({ userData: data })\n          }).catch(e => { throw e })\n        await GetTeamsOfUser().then(data => {\n          setUser(user => ({ ...user, userTeams: data }))\n        }).catch(e => { throw e })\n      } catch (e) {\n        console.log(e)\n        localStorage.removeItem(process.env.REACT_APP_CLIENT_CONSUMER_ID)\n          window.location.href = `https://bitbucket.org/site/oauth2/authorize?client_id=${process.env.REACT_APP_CLIENT_CONSUMER_ID}&response_type=code`\n        setApiError(\"An Error Occoured, Authenticating Again\")\n      }\n    }\n    GetIntialInformation()\n  }, [setUser, setApiError])\n  return (<>\n    <Paper elevation={2}>\n      {\n        !apiError ?\n          user ?.userTeams\n            ? <div className=\"teams-list\">\n              <div className=\"home-heading\">{user.userTeams.size ? \"Please select a Team from the list\" : \"You don't belong to any team\"}</div>\n              {user.userTeams.values.map(e => <TeamListPaper key={e.uuid} url={`/team/${e.uuid}`} display_name={e.display_name} info={e} />)}\n            </div>\n            : <div className=\"Home-Loader\"><span><CircularProgress /></span><br/><br/><span>Loading Your Teams</span></div>\n          : <div className=\"Api-Error\">{apiError}</div>\n      }\n    </Paper>\n  </>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport { GetTeamById } from '../data-access/request-layer'\nimport TeamListPaper from '../components/team-list-paper'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Paper from '@material-ui/core/Paper';\nimport './css/Home.css';\n\nexport default function Team(props) {\n  const [teamDetails, setTeamDetails] = useState(null)\n  const [apiError, setApiError] = useState(null)\n\n  useEffect(() => {\n    try{\n      GetTeamById(props.match.params.teamId).then(data => {\n        setTeamDetails(data)\n      }).catch(e => {throw e})\n    }catch(e) {\n      setApiError(e)\n    }\n  }, [props, setTeamDetails])\n  const info = {\n    CreateRepo: {\n        links:{\n          avatar:{\n            href: \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRg4i08EuAeoPVS3EVs91aU3_E1eSKTECTo-57BRlrJM9t2fZSf\"\n          }\n        }\n      },\n      ViewProject: {\n        links:{\n          avatar:{\n            href: \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQba4NBe1pHvyeEuALzd0ODAjbvQ6wYSQBnwGsafGMaSot3rorH\"\n          }\n        }\n      },\n      ViewTeam: {\n        links:{\n          avatar:{\n            href: \"https://cdn1.iconfinder.com/data/icons/business-management-set-2-6/64/blue-83-512.png\"\n          }\n        }\n      },\n    }\n  return (\n  <>\n  <Paper elevation={2}>\n    {\n      !apiError ?\n        teamDetails\n          ? <div className=\"teams-list\">\n            <div className=\"home-heading\">{teamDetails.display_name ? teamDetails.display_name : \"\"}</div>\n            <TeamListPaper url={teamDetails.links.html.href} display_name=\"View Team\" info={info.ViewTeam}/>\n            <TeamListPaper url={`/team/${props.match.params.teamId}/projects`} display_name=\"View Projects\" info={info.ViewProject}/>\n            <TeamListPaper url={`/createRepo/${props.match.params.teamId}`} display_name=\"Create Repo\" info={info.CreateRepo}/>\n          </div>\n          : <div className=\"Home-Loader\"><span><CircularProgress /></span><br/><br/><span>Loading Team Details</span></div>\n        : <div className=\"Api-Error\">{apiError}</div>\n    }\n  </Paper>\n</>\n  );\n}","var CreateProjectBody = {\n    \"name\": \"\",\n    \"key\": \"\",\n    \"description\": \"Automated Creation\",\n    \"links\": {\n        \"avatar\": {\n            \"href\": \"https://pbs.twimg.com/profile_images/984172509544120320/b6-a5wIm_400x400.jpg\"\n        }\n    },\n    \"is_private\": true\n}\n\nvar CreateRepoBody = {\n                        \"scm\": \"git\",\n                        \"website\": null,\n                        \"has_wiki\": false,\n                        \"fork_policy\": \"no_public_forks\",\n                        \"project\": {\n                            \"key\": \"\",\n                            \"uuid\": \"\",\n                        },\n                        \"is_private\": true,\n                        \"description\": \"Automated Creation\"\n                    }\n\nvar CreateBranchBody = {\n    \"name\" : \"\",\n    \"target\" : {\n        \"hash\" : \"\",\n    }\n}\n\nvar BranchingModelBody = {\n                        \"development\": {\n                        \"is_valid\": true,\n                        \"enabled\" : true,\n                        \"name\": \"development\",\n                        \"use_mainbranch\": false\n                        },\n                        \"branch_types\": [\n                        {\n                            \"kind\": \"release\",\n                            \"enabled\": false,\n                            \"prefix\": \"release/\"\n                        },\n                        {\n                            \"kind\": \"hotfix\",\n                            \"enabled\": false,\n                            \"prefix\": \"hotfix/\"\n                        },\n                        {\n                            \"kind\": \"feature\",\n                            \"enabled\": false,\n                            \"prefix\": \"feature/\"\n                        },\n                        {\n                            \"kind\": \"bugfix\",\n                            \"enabled\": false,\n                            \"prefix\": \"bugfix/\"\n                        }\n                        ],\n                        \"production\": {\n                        \"is_valid\": true,\n                        \"enabled\": true,\n                        \"name\": \"master\",\n                        \"use_mainbranch\": false\n                        },\n                        \"type\": \"branching_model_settings\"\n                    }\n\nconst BranchRestrictionsBody = [\n\t{\n\t\t\"kind\": \"require_default_reviewer_approvals_to_merge\",\n\t\t\"users\": [],\n\t\t\"pattern\": \"\",\n\t\t\"value\": 1,\n\t\t\"branch_match_kind\": \"branching_model\",\n\t\t\"groups\": [],\n\t\t\"branch_type\": \"production\",\n\t\t\"type\": \"branchrestriction\"\n\t},\n\t{\n\t\t\"kind\": \"require_approvals_to_merge\",\n\t\t\"users\": [],\n\t\t\"pattern\": \"\",\n\t\t\"value\": 1,\n\t\t\"branch_match_kind\": \"branching_model\",\n\t\t\"groups\": [],\n\t\t\"branch_type\": \"production\",\n\t\t\"type\": \"branchrestriction\"\n\t},\n\t{\n\t\t\"kind\": \"force\",\n\t\t\"users\": [],\n\t\t\"pattern\": \"\",\n\t\t\"value\": null,\n\t\t\"branch_match_kind\": \"branching_model\",\n\t\t\"groups\": [],\n\t\t\"branch_type\": \"production\",\n\t\t\"type\": \"branchrestriction\"\n\t},\n\t{\n\t\t\"kind\": \"delete\",\n\t\t\"users\": [],\n\t\t\"pattern\": \"\",\n\t\t\"value\": null,\n\t\t\"branch_match_kind\": \"branching_model\",\n\t\t\"groups\": [],\n\t\t\"branch_type\": \"production\",\n\t\t\"type\": \"branchrestriction\"\n\t},\n\t{\n\t\t\"kind\": \"push\",\n\t\t\"users\": [],\n\t\t\"pattern\": \"\",\n\t\t\"value\": null,\n\t\t\"branch_match_kind\": \"branching_model\",\n\t\t\"groups\": [],\n\t\t\"branch_type\": \"production\",\n\t\t\"type\": \"branchrestriction\"\n\t},\n\t{\n\t\t\"kind\": \"force\",\n\t\t\"users\": [],\n\t\t\"pattern\": \"\",\n\t\t\"value\": null,\n\t\t\"branch_match_kind\": \"branching_model\",\n\t\t\"groups\": [],\n\t\t\"branch_type\": \"development\",\n\t\t\"type\": \"branchrestriction\"\n\t},\n\t{\n\t\t\"kind\": \"delete\",\n\t\t\"users\": [],\n\t\t\"pattern\": \"\",\n\t\t\"value\": null,\n\t\t\"branch_match_kind\": \"branching_model\",\n\t\t\"groups\": [],\n\t\t\"branch_type\": \"development\",\n\t\t\"type\": \"branchrestriction\"\n\t}\n]\n\nconst EnablePipelineBody = {\n    \"enabled\": true,\n    \"type\": \"repository_pipelines_configuration\"\n  }\n\nexport { CreateProjectBody, CreateRepoBody, CreateBranchBody, BranchingModelBody, BranchRestrictionsBody, EnablePipelineBody}","import { GetProjectsOfTeam, GetRepoOfTeam, CreateProject, CreateRepo, CreateBranch, GetBranch, CommitReadmeFile, ConfigureBranchingModel, CreateBranchRestrictions, AssignDefaultReviewers, EnablePipelines, AddKnownHosts } from './request-layer'\nimport { CreateProjectBody, CreateRepoBody, CreateBranchBody, BranchingModelBody, BranchRestrictionsBody, EnablePipelineBody } from './bitbucket-api-helper'\nimport { Config } from './config'\n\nconst ShuffleString = s => {\n    var arr = s.split('');\n    arr.sort(function () {\n        return 0.5 - Math.random();\n    });\n    s = arr.join('');\n    return s;\n}\n\nconst CheckIfProjectExists = async (data) => {\n    try {\n        var TeamProjects = []\n        await GetProjectsOfTeam(data.teamId).then(async data1 => {\n            data1.values.map(e => TeamProjects.push(e))\n            if (data1.size > 10) {\n                for (let x = 2; x <= Math.ceil(parseFloat(data1.size / 10)); x++) {\n                    await GetProjectsOfTeam(data.teamId, x).then(data2 => {\n                        data2.values.map(e => TeamProjects.push(e))\n                    }).catch(e => {\n                        console.log(e)\n                    })\n                }\n            }\n        }).then(() => {\n            console.log(TeamProjects)\n        }).catch(e => {\n            console.log(e)\n        })\n        let ProjectDetails = TeamProjects.reduce((a, c) => {\n            if (c.name.includes(data.AccountName) || c.name.includes(data.orgId))\n                a.push(c)\n            return a\n        }, [])\n        return ProjectDetails\n    }\n    catch (e) {\n        throw e\n    }\n}\n\nconst CreateNewProject = async data => {\n    try {\n        CreateProjectBody.name = data.AccountName\n        CreateProjectBody.key = data.AccountName.slice(0, 2).toUpperCase() + \"_\" + ShuffleString(data.AccountName + Math.random()).toUpperCase().slice(0, 4)\n        let CreateProjectData = await CreateProject(data.teamId, CreateProjectBody)\n        return CreateProjectData\n    }\n    catch (e) {\n        throw e\n    }\n}\n\nconst CreateRepository = async (data, projectData) => {\n    CreateRepoBody.project.uuid = projectData.uuid\n    CreateRepoBody.project.key = projectData.key\n    let create = await CreateRepo(data.teamId, data.ProjectName, CreateRepoBody)\n    return create\n}\n\n\nexport const CreateRepoProcess = async data => {\n    try {\n        var Project = await CheckIfProjectExists(data).then(val => {\n            data.UpdateStatus({ type: \"Message\", Message: `Checking If Project Exists : Success` })\n            return val\n        }).catch(e => {\n            data.UpdateStatus({ type: \"Error\", Message: `Checking If Project Exists : Failed with error ${e}` })\n            return e\n        })\n        if (Project.length == 0)\n            Project = await CreateNewProject(data).then(val => {\n                data.UpdateStatus({ type: \"Message\", Message: `Create New Project : Success` })\n                return val\n            }).catch(e => {\n                data.UpdateStatus({ type: \"Error\", Message: `Create New Project : Failed with error ${e}` })\n                return e\n            })\n        else Project = Project[0]\n        let repoCreateData = await CreateRepository(data, Project).then(val => {\n            data.UpdateStatus({ type: \"Message\", Message: `Create Repository : Success` })\n            return val\n        }).catch(e => {\n            data.UpdateStatus({ type: \"Error\", Message: `Create Repository : Failed with error ${e}, Can't Continue Further` })\n            return e\n        })\n        if (repoCreateData.type === \"error\")\n            throw JSON.stringify(repoCreateData.error)\n        await CommitReadmeFile(data.teamId, repoCreateData.uuid).then(val => {\n            data.UpdateStatus({ type: \"Message\", Message: `Create Readme File : Success` })\n            return val\n        }).catch(e => {\n            data.UpdateStatus({ type: \"Error\", Message: `Create Readme File : Failed with error ${e}` })\n            return e\n        })\n        let RepoBranchesDetails = await GetBranch(data.teamId, repoCreateData.uuid).then(val => {\n            data.UpdateStatus({ type: \"Message\", Message: `Getting Repository Branches : Success` })\n            return val\n        }).catch(e => {\n            data.UpdateStatus({ type: \"Error\", Message: `Getting Repository Branches : Failed with error ${e}` })\n            return e\n        })\n        if (RepoBranchesDetails.size === 0)\n            throw new Error(\"No Branches Found\")\n        CreateBranchBody.name = \"development\"\n        CreateBranchBody.target.hash = RepoBranchesDetails.values[0].target.hash\n        await CreateBranch(data.teamId, repoCreateData.uuid, CreateBranchBody).then(val => {\n            data.UpdateStatus({ type: \"Message\", Message: `Creating Development Branch : Success` })\n            return val\n        }).catch(e => {\n            data.UpdateStatus({ type: \"Error\", Message: `Creating Development Branch : Failed with error ${e}` })\n            return e\n        })\n        await ConfigureBranchingModel(data.teamId, repoCreateData.uuid, BranchingModelBody).then(val => {\n            data.UpdateStatus({ type: \"Message\", Message: `Configuring Branching Model : Success` })\n            return val\n        }).catch(e => {\n            data.UpdateStatus({ type: \"Error\", Message: `Configuring Branching Model : Failed with error ${e}` })\n            return e\n        })\n        BranchRestrictionsBody.map(e => {\n            return CreateBranchRestrictions(data.teamId, repoCreateData.uuid, e).then(val => {\n                data.UpdateStatus({ type: \"Message\", Message: `Adding Branch Restriction - Kind : ${e.kind}, branch type : ${e.branch_type} : Success` })\n                return val\n            }).catch(e => {\n                data.UpdateStatus({ type: \"Error\", Message: `Adding Branch Restriction - Kind : ${e.kind}, branch type : ${e.branch_type} : Failed with error ${e}` })\n                return e\n            })\n        })\n        Config.Bitbucket.DefaultReviewers.map(e => {\n            return AssignDefaultReviewers(data.teamId, repoCreateData.uuid, e).then(val => {\n                data.UpdateStatus({ type: \"Message\", Message: `Adding Default Reviewer ${e} : Success` })\n                return val\n            }).catch(e => {\n                data.UpdateStatus({ type: \"Error\", Message: `Adding Default Reviewer ${e} : Failed with error ${e}` })\n                return e\n            })\n        })\n        await EnablePipelines(data.teamId, repoCreateData.uuid, EnablePipelineBody).then(val => {\n            data.UpdateStatus({ type: \"Message\", Message: `Enabling Pipelines : Success` })\n            return val\n        }).catch(e => {\n            data.UpdateStatus({ type: \"Error\", Message: `Enabling Pipelines : Failed with error ${e}` })\n            return e\n        })\n        Config.Bitbucket.SSHKeys.map(e => {\n            return AddKnownHosts(data.teamId, repoCreateData.uuid, e).then(val => {\n                data.UpdateStatus({ type: \"Message\", Message: `Adding Known SSH Host - ${e.hostname} : Success` })\n                return val\n            }).catch(e => {\n                data.UpdateStatus({ type: \"Error\", Message: `Adding Known SSH Host - ${e.hostname} : Failed with error ${e}` })\n                return e\n            })\n        })\n    }\n    catch (e) {\n        throw e\n    }\n}   ","import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { CreateRepoProcess } from '../data-access/createRepoProcess'\nimport './css/createRepo.css'\nimport Paper from '@material-ui/core/Paper';\nimport ArrowBackTwoToneIcon from '@material-ui/icons/ArrowBackTwoTone';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nexport default function CreateRepo(props) {\n    const [repoDetails, setRepoDetails] = useState({org : null, account:null, project:null})\n    const [TextFieldError, setTextFieldError] = useState({\n        org : false,\n        account: false,\n        project: false\n    })\n    const [status, setStatus] = useState({\n        Message : [],\n        Error: [],\n        InProgress : false\n    })\n\n    const HandleStatusChange = Value => {\n        let NewStatus = status[Value.type]\n        NewStatus.push(Value.Message)\n        setStatus({\n            ...status,\n            [Value.type] : NewStatus\n        })\n    }\n\n    const handleInputChange = e => {\n        setRepoDetails({...repoDetails, [e.target.id]: e.target.value})\n    }\n    const startRepoCreationProcess = async () => {\n        try{\n            if(!repoDetails.org) {setTextFieldError({...TextFieldError, org: true, InvalidInput: true}); return}\n            if(!repoDetails.account) {setTextFieldError({...TextFieldError, account: true, InvalidInput: true}); return}\n            if(!repoDetails.project) {setTextFieldError({...TextFieldError, project: true, InvalidInput: true}); return}\n            setStatus({...status,InProgress:true})\n            await CreateRepoProcess({\n                teamId : props.match.params.teamId,\n                ProjectName : `${repoDetails.project.replace(/ /g, \"-\").toLowerCase()}-${repoDetails.org}`,\n                AccountName : `${repoDetails.account.toLowerCase(/ /g, \" - \")}-${repoDetails.org}`,\n                orgId : repoDetails.org,\n                UpdateStatus: HandleStatusChange\n            }).catch(e => {\n                throw e\n            }).finally(() => {\n                setStatus({...status,InProgress:false})\n            })\n        }\n        catch(e){\n            let NewError = status.Error.push(e)\n            setStatus({...status, Error: NewError, InProgress:false})\n        }\n    }\n\n    const Message = props => {\n        return (\n            <p key={props.key} className={props.className}>{props.Value}</p>\n        )\n    }\n\n    return (<>    \n        <div className=\"repoInputs\">\n            <Paper elevation={2}>\n                {/* <ArrowBackTwoToneIcon className=\"back-button\"/> */}\n                <TextField type=\"number\" error={TextFieldError.org} id=\"org\" onChange={handleInputChange} label=\"Enter Unique ID\" helperText=\"Ex : 776\" /> <br />\n                <TextField type=\"text\" error={TextFieldError.account} id=\"account\" onChange={handleInputChange} label=\"Doing Project For?\" helperText=\"Ex : Google\" /><br />\n                <TextField type=\"text\" error={TextFieldError.project} id=\"project\" onChange={handleInputChange} label=\"Enter Project Name\" helperText=\"Integration With Google Maps\" /><br />\n                <Button disabled={status.InProgress} variant=\"contained\" color=\"primary\" onClick={startRepoCreationProcess}>{status.InProgress ? <CircularProgress size={20}/> : \"Create Repo\"}</Button>\n                <div className=\"messages-panel\">\n                    {status.Message.map((e,v) => <Message className=\"statusMessage\" Value={e} key={v}/>)}\n                    {status.Error.map((e,v) => <Message className=\"errorMessage\" Value={e} key={v}/>)}\n                </div>\n            </Paper>\n        </div>\n    </>\n    );\n}","import React from 'react';\nexport default function TeamProjects(props) {\n  return (<>\n        <div className=\"teams-list\">\n            <p></p>{props.match.params.teamId}\n          </div>\n  </>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport Home from './views/Home';\nimport Team from './views/Team';\nimport CreateRepo from './views/CreateRepo';\nimport TeamProjects from './views/TeamProjects';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { userContext } from './context/userContext'\nimport './index.css'\n\nconst Base = () => {\n    const [user, setUser] = useState(null)\n\n    return (\n        <Router>\n            <userContext.Provider value={{user, setUser}}>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/team/:teamId\" component={Team} />\n            <Route exact path=\"/team/:teamId/projects\" component={TeamProjects} />\n            <Route exact path=\"/createRepo/:teamId\" component={CreateRepo} />\n            </userContext.Provider>\n        </Router>\n    )\n}\n\nReactDOM.render(<Base />, document.getElementById('root'));\nserviceWorker.unregister();\n","import axios from 'axios';\nimport {Config} from './config'\nimport qs from 'qs'\nimport {DefaultReadme, \n    // NodeReadme, \n    // HtmlJsCssReadme, \n    // PythonReadme\n} from '../data-access/readme-files'\n\nvar api = axios.create({\n    baseURL: \"https://api.bitbucket.org/2.0/\",\n    timeout: 10000,\n    headers: {\"Content-Type\": \"application/json\"}\n})\n\nconst CatchAxiosError = ErrorObject => {\n    if (ErrorObject.response) {\n        return JSON.stringify({Error: `Api Responded with status code ${ErrorObject.response.status}`,\n                 Message : ErrorObject.response.data})\n    }else {\n        return JSON.stringify({Error : \"Error\", Message: ErrorObject.message})\n    }\n}\n\nconst GetAccesTokenFromCode = code => {\n    return api({\n        baseURL: \"https://bitbucket.org/site/oauth2/\",\n        method: \"POST\",\n        url: Config.Bitbucket.Endpoints.GetAccesTokenFromCode,\n        headers: {\n            \"Content-Type\" : \"application/x-www-form-urlencoded\",\n            \"Authorization\" : `Basic ${new Buffer(Config.Bitbucket.ClientId+\":\"+Config.Bitbucket.ClientSecret).toString(\"base64\")}`\n        },\n        data: qs.stringify({\n            grant_type : \"authorization_code\",\n            code: code\n        })\n    }).then(response  => {\n        console.log(`Setting new token : ${JSON.stringify(response.data)}`)\n        window.localStorage.setItem(Config.Bitbucket.ClientId, JSON.stringify(response.data))\n        return response.data\n    }).catch(error => {\n        throw CatchAxiosError(error)\n    })\n}\n\nconst RefreshToken = (CallbackFunction = null) => {\n    return api({\n        baseURL: \"https://bitbucket.org/site/oauth2/\",\n        method: \"POST\",\n        url: Config.Bitbucket.Endpoints.GetAccesTokenFromCode,\n        headers: {\n            \"Content-Type\" : \"application/x-www-form-urlencoded\",\n            \"Authorization\" : `Basic ${new Buffer(Config.Bitbucket.ClientId+\":\"+Config.Bitbucket.ClientSecret).toString(\"base64\")}`\n        },\n        data: qs.stringify({\n            grant_type : \"refresh_token\",\n            refresh_token: JSON.parse(window.localStorage.getItem(Config.Bitbucket.ClientId)).refresh_token\n        })\n    }).then(async response  => {\n        console.log(`Refrshing token : ${JSON.stringify(response.data)}`)\n        window.localStorage.setItem(Config.Bitbucket.ClientId, JSON.stringify(response.data))\n        if(CallbackFunction)\n            return await CallbackFunction()\n        else\n            return response.data\n    }).catch(error => {\n        throw CatchAxiosError(error)\n    })\n}\n\nconst GetTeamsOfUser = () => {\n    return api({\n        method: \"GET\",\n        url: Config.Bitbucket.Endpoints.GetTeamsOfUser,\n        headers: {\n            \"Authorization\" : `Bearer ${JSON.parse(window.localStorage.getItem(Config.Bitbucket.ClientId)).access_token}`\n        },\n        params: {\n            role: \"admin\"\n        }\n    }).then(response  => {\n        return response.data\n    }).catch(async error => {\n        if(error.response.status === 401)\n            return await RefreshToken(() => GetTeamsOfUser())\n        else\n            throw CatchAxiosError(error)\n    })\n}\n\nconst GetTeamById = teamId => {\n    return api({\n        method: \"GET\",\n        url: `${Config.Bitbucket.Endpoints.GetTeamsOfUser}/${teamId}`,\n        headers: {\n            \"Authorization\" : `Bearer ${JSON.parse(window.localStorage.getItem(Config.Bitbucket.ClientId)).access_token}`\n        },\n        params: {\n            role: \"member\"\n        }\n    }).then(response  => {\n        return response.data\n    }).catch(async error => {\n        if(error.response.status === 401)\n            return await RefreshToken(() => GetTeamById(teamId))\n        else\n            throw CatchAxiosError(error)\n    })\n}\n\nconst GetProjectsOfTeam = (teamId, pageNumber=1) => {\n    return api({\n        method: \"GET\",\n        url: `${Config.Bitbucket.Endpoints.GetTeamsOfUser}/${teamId}/projects/`,\n        headers: {\n            \"Authorization\" : `Bearer ${JSON.parse(window.localStorage.getItem(Config.Bitbucket.ClientId)).access_token}`\n        },\n        params: {\n            page: pageNumber\n        },\n    }).then(response  => {\n        return response.data\n    }).catch(async error => {\n        if(error.response.status === 401)\n            return await RefreshToken(() => GetProjectsOfTeam(teamId, pageNumber))\n        else\n            throw CatchAxiosError(error)\n    })\n}\n\nconst CreateProject = (teamId, body) => {\n    return api({\n        method: \"POST\",\n        url: `${Config.Bitbucket.Endpoints.GetTeamsOfUser}/${teamId}/projects/`,\n        headers: {\n            \"Authorization\" : `Bearer ${JSON.parse(window.localStorage.getItem(Config.Bitbucket.ClientId)).access_token}`\n        },\n        data: JSON.stringify(body),\n    }).then(response  => {\n        return response.data\n    }).catch(async error => {\n        if(error.response.status === 401)\n            return await RefreshToken(() => CreateProject(teamId, body))\n        else\n            throw CatchAxiosError(error)\n    })\n}\n\nconst GetRepoOfTeam = (teamId, pageNumber=1) => {\n    return api({\n        method: \"GET\",\n        url: `${Config.Bitbucket.Endpoints.GetRepo}/${teamId}`,\n        headers: {\n            \"Authorization\" : `Bearer ${JSON.parse(window.localStorage.getItem(Config.Bitbucket.ClientId)).access_token}`\n        },\n        params: {\n            page: pageNumber\n        },\n    }).then(response  => {\n        return response.data\n    }).catch(async error => {\n        if(error.response.status === 401)\n            return await RefreshToken(() => GetRepoOfTeam(teamId, pageNumber))\n        else\n            throw CatchAxiosError(error)\n    })\n}\n\nconst CreateRepo = (teamId, projectName,  body) => {\n    return api({\n        method: \"POST\",\n        url: `${Config.Bitbucket.Endpoints.GetRepo}/${teamId}/${projectName}`,\n        headers: {\n            \"Authorization\" : `Bearer ${JSON.parse(window.localStorage.getItem(Config.Bitbucket.ClientId)).access_token}`\n        },\n        data: JSON.stringify(body)\n    }).then(response  => {\n        return response.data\n    }).catch(async error => {\n        if(error.response.status === 401)\n            return await RefreshToken(() => CreateRepo(teamId, projectName, body))\n        else\n            throw CatchAxiosError(error)\n    })\n}\n\nconst CreateBranch = (teamId, repoId,  body) => {\n    return api({\n        method: \"POST\",\n        url: `${Config.Bitbucket.Endpoints.GetRepo}/${teamId}/${repoId}/refs/branches`,\n        headers: {\n            \"Authorization\" : `Bearer ${JSON.parse(window.localStorage.getItem(Config.Bitbucket.ClientId)).access_token}`\n        },\n        data: JSON.stringify(body)\n    }).then(response  => {\n        return response.data\n    }).catch(async error => {\n        if(error.response.status === 401)\n            return await RefreshToken(() => CreateBranch(teamId, repoId, body))\n        else\n            throw CatchAxiosError(error)\n    })\n}\n\nconst GetBranch = (teamId, repoId, pageNumber) => {\n    return api({\n        method: \"GET\",\n        url: `${Config.Bitbucket.Endpoints.GetRepo}/${teamId}/${repoId}/refs/branches`,\n        headers: {\n            \"Authorization\" : `Bearer ${JSON.parse(window.localStorage.getItem(Config.Bitbucket.ClientId)).access_token}`\n        },\n        params: {\n            page: pageNumber\n        }\n    }).then(response  => {\n        return response.data\n    }).catch(async error => {\n        if(error.response.status === 401)\n            return await RefreshToken(() => GetBranch(teamId, repoId, pageNumber))\n        else\n            throw CatchAxiosError(error)\n    })\n}\n\nconst CommitReadmeFile = (teamId, repoId) => {\n    // const blob = new Blob(['Created from automated process'], {type : 'text/markdown'})\n    // const blob = new Blob(['Created from automated process'], {type : 'text/markdown'})\n    // var formDataToPass = new FormData()\n    // formDataToPass.append('file', blob, 'success.txt')\n    return api({\n        method: \"POST\",\n        url: `${Config.Bitbucket.Endpoints.GetRepo}/${teamId}/${repoId}/src`,\n        headers: {\n            \"Content-Type\" : \"application/x-www-form-urlencoded\",\n            \"Authorization\" : `Bearer ${JSON.parse(window.localStorage.getItem(Config.Bitbucket.ClientId)).access_token}`\n        },\n        data: qs.stringify({\n            'README.MD' : DefaultReadme,\n            'message': 'Created Using Automated Process - https://github.com/seanjin17/Bitbucket-Automated-New-Repository-Process',\n        })\n    }).then(response  => {\n        return response\n    }).catch(async error => {\n        if(error.response.status === 401)\n            return await RefreshToken(() => CommitReadmeFile(teamId, repoId))\n        else\n            throw CatchAxiosError(error)\n    })\n}\n\nconst ConfigureBranchingModel = (teamId, repoId, body) => {\n    return api({\n        method: \"PUT\",\n        url: `${Config.Bitbucket.Endpoints.GetRepo}/${teamId}/${repoId}/branching-model/settings`,\n        headers: {\n            \"Authorization\" : `Bearer ${JSON.parse(window.localStorage.getItem(Config.Bitbucket.ClientId)).access_token}`\n        },\n        data: JSON.stringify(body)\n    }).then(response  => {\n        return response\n    }).catch(async error => {\n        if(error.response.status === 401)\n            return await RefreshToken(() => ConfigureBranchingModel(teamId, repoId, body))\n        else\n            throw CatchAxiosError(error)\n    })\n}\n\nconst CreateBranchRestrictions = (teamId, repoId, body) => {\n    return api({\n        method: \"POST\",\n        url: `${Config.Bitbucket.Endpoints.GetRepo}/${teamId}/${repoId}/branch-restrictions`,\n        headers: {\n            \"Authorization\" : `Bearer ${JSON.parse(window.localStorage.getItem(Config.Bitbucket.ClientId)).access_token}`\n        },\n        data: JSON.stringify(body)\n    }).then(response  => {\n        return response\n    }).catch(async error => {\n        if(error.response.status === 401)\n            return await RefreshToken(() => CreateBranchRestrictions(teamId, repoId, body))\n        else\n            throw CatchAxiosError(error)\n    })\n}\n\nconst AssignDefaultReviewers = (teamId, repoId, userName) => {\n    return api({\n        method: \"PUT\",\n        url: `${Config.Bitbucket.Endpoints.GetRepo}/${teamId}/${repoId}/default-reviewers/${userName}`,\n        headers: {\n            \"Authorization\" : `Bearer ${JSON.parse(window.localStorage.getItem(Config.Bitbucket.ClientId)).access_token}`\n        },\n    }).then(response  => {\n        return response\n    }).catch(async error => {\n        if(error.response.status === 401)\n            return await RefreshToken(() => AssignDefaultReviewers(teamId, repoId, userName))\n        else\n            throw CatchAxiosError(error)\n    })\n}\n\nconst EnablePipelines = (teamId, repoId, body) => {\n    return api({\n        method: \"PUT\",\n        url: `${Config.Bitbucket.Endpoints.GetRepo}/${teamId}/${repoId}/pipelines_config`,\n        headers: {\n            \"Authorization\" : `Bearer ${JSON.parse(window.localStorage.getItem(Config.Bitbucket.ClientId)).access_token}`\n        },\n        data: JSON.stringify(body)\n    }).then(response  => {\n        return response\n    }).catch(async error => {\n        if(error.response.status === 401)\n            return await RefreshToken(() => EnablePipelines(teamId, repoId, body))\n        else\n            throw CatchAxiosError(error)\n    })\n}\n\nconst AddKnownHosts = (teamId, repoId, body) => {\n    return api({\n        method: \"POST\",\n        url: `${Config.Bitbucket.Endpoints.GetRepo}/${teamId}/${repoId}/pipelines_config/ssh/known_hosts/`,\n        headers: {\n            \"Authorization\" : `Bearer ${JSON.parse(window.localStorage.getItem(Config.Bitbucket.ClientId)).access_token}`\n        },\n        data: JSON.stringify(body)\n    }).then(response  => {\n        return response\n    }).catch(async error => {\n        if(error.response.status === 401)\n            return await RefreshToken(() => EnablePipelines(teamId, repoId, body))\n        else\n            throw CatchAxiosError(error)\n    })\n}\n\nexport {\n    GetAccesTokenFromCode, \n    GetTeamsOfUser, \n    RefreshToken, \n    GetTeamById, \n    GetProjectsOfTeam, \n    CreateProject, \n    GetRepoOfTeam, \n    CreateRepo, \n    CreateBranch, \n    GetBranch, \n    CommitReadmeFile, \n    ConfigureBranchingModel, \n    CreateBranchRestrictions, \n    AssignDefaultReviewers, \n    EnablePipelines, \n    AddKnownHosts\n}","const DefaultReadme = `\n*CREATED USING AUTOMATED PROCESS*\n**Contribute to the project at https://github.com/seanjin17/Bitbucket-Automated-New-Repository-Process**\n\n**Edit a file, create a new file, and clone from Bitbucket in under 2 minutes**\n\nWhen you're done, you can delete the content in this README and update the file with details for others getting started with your repository.\n\n*We recommend that you open this README in another tab as you perform the tasks below. You can [watch our video](https://youtu.be/0ocf7u76WSo) for a full demo of all the steps in this tutorial. Open the video in a new tab to avoid leaving Bitbucket.*\n\n---\n\n## Edit a file\n\nYou'll start by editing this README file to learn how to edit a file in Bitbucket.\n\n1. Click **Source** on the left side.\n2. Click the README.md link from the list of files.\n3. Click the **Edit** button.\n4. Delete the following text: *Delete this line to make a change to the README from Bitbucket.*\n5. After making your change, click **Commit** and then **Commit** again in the dialog. The commit page will open and youâ€™ll see the change you just made.\n6. Go back to the **Source** page.\n\n---\n\n## Create a file\n\nNext, youâ€™ll add a new file to this repository.\n\n1. Click the **New file** button at the top of the **Source** page.\n2. Give the file a filename of **contributors.txt**.\n3. Enter your name in the empty file space.\n4. Click **Commit** and then **Commit** again in the dialog.\n5. Go back to the **Source** page.\n\nBefore you move on, go ahead and explore the repository. You've already seen the **Source** page, but check out the **Commits**, **Branches**, and **Settings** pages.\n\n---\n\n## Clone a repository\n\nUse these steps to clone from SourceTree, our client for using the repository command-line free. Cloning allows you to work on your files locally. If you don't yet have SourceTree, [download and install first](https://www.sourcetreeapp.com/). If you prefer to clone from the command line, see [Clone a repository](https://confluence.atlassian.com/x/4whODQ).\n\n1. Youâ€™ll see the clone button under the **Source** heading. Click that button.\n2. Now click **Check out in SourceTree**. You may need to create a SourceTree account or log in.\n3. When you see the **Clone New** dialog in SourceTree, update the destination path and name if youâ€™d like to and then click **Clone**.\n4. Open the directory you just created to see your repositoryâ€™s files.\n\nNow that you're more familiar with your Bitbucket repository, go ahead and add a new file locally. You can [push your change back to Bitbucket with SourceTree](https://confluence.atlassian.com/x/iqyBMg), or you can [add, commit,](https://confluence.atlassian.com/x/8QhODQ) and [push from the command line](https://confluence.atlassian.com/x/NQ0zDQ).\n`\n\nconst NodeReadme = ``\n\nconst PythonReadme = ``\n\nconst HtmlJsCssReadme = ``\n\nexport {\n    DefaultReadme,\n    NodeReadme,\n    PythonReadme,\n    HtmlJsCssReadme\n}","import {KnownHosts} from './ssh-known-hosts'\nexport var Config = {\n    Bitbucket:{\n        ClientId: process.env.REACT_APP_CLIENT_CONSUMER_ID, // Your consumer Client ID\n        ClientSecret: process.env.REACT_APP_CLIENT_CONSUMER_SECRET, // Your consumer secret\n        Endpoints: {\n            GetAccesTokenFromCode : \"access_token\",\n            GetTeamsOfUser : \"teams\",\n            GetRepo : \"repositories\",\n        },\n        DefaultReviewers: [], //Unique ID of user.Ex : {40b7d635-e121-4f04-8a7f-43bad1eddf47}\n        SSHKeys: KnownHosts\n    }\n}","export const KnownHosts = [\n    {\n      \"type\": \"pipeline_known_host\",\n      \"hostname\": \"127.0.0.1\",\n      \"public_key\": {\n        \"type\": \"pipeline_ssh_public_key\",\n        \"key_type\": \"ssh-rsa\",\n        \"key\": \"\", // Key to access the server\n        \"md5_fingerprint\": \"\",\n        \"sha256_fingerprint\": \"\"\n      }\n    }\n  ]\n\n  // You can try adding 1 ssh server manually to a repo and then get the \n  // configuration from bitbucket get pipelines api youll find the proper format of this"],"sourceRoot":""}
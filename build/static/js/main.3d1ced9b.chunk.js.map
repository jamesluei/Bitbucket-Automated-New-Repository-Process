{"version":3,"sources":["context/userContext.js","components/team-list-paper.js","views/Home.js","views/Team.js","data-access/bitbucket-api-helper.js","data-access/createRepoProcess.js","views/CreateRepo.js","views/TeamProjects.js","serviceWorker.js","index.js","data-access/request-layer.js","data-access/readme-files.js","data-access/config.js","data-access/ssh-known-hosts.js"],"names":["userContext","createContext","TeamListPaper","props","console","log","to","url","className","info","CardMedia","image","links","avatar","href","display_name","Home","useContext","user","setUser","useState","apiError","setApiError","useEffect","a","window","localStorage","getItem","Config","Bitbucket","ClientId","GetAccesTokenFromCode","URLSearchParams","location","search","get","then","data","userData","catch","e","RefreshToken","GetTeamsOfUser","userTeams","GetIntialInformation","Paper","elevation","size","values","map","key","uuid","CircularProgress","Team","teamDetails","setTeamDetails","GetTeamById","match","params","teamId","CreateRepo","ViewProject","ViewTeam","html","CreateProjectBody","CreateRepoBody","CreateBranchBody","BranchingModelBody","BranchRestrictionsBody","EnablePipelineBody","ShuffleString","s","arr","split","sort","Math","random","join","CheckIfProjectExists","TeamProjects","GetProjectsOfTeam","data1","push","x","ceil","parseFloat","data2","ProjectDetails","reduce","c","name","includes","AccountName","orgId","CreateNewProject","slice","toUpperCase","CreateProject","CreateProjectData","CreateRepository","projectData","project","ProjectName","create","CreateRepoProcess","val","UpdateStatus","type","Message","Project","length","repoCreateData","JSON","stringify","error","CommitReadmeFile","GetBranch","RepoBranchesDetails","Error","target","hash","CreateBranch","ConfigureBranchingModel","CreateBranchRestrictions","kind","branch_type","DefaultReviewers","AssignDefaultReviewers","EnablePipelines","SSHKeys","AddKnownHosts","hostname","org","account","repoDetails","setRepoDetails","TextFieldError","setTextFieldError","InProgress","status","setStatus","HandleStatusChange","Value","NewStatus","handleInputChange","id","value","startRepoCreationProcess","InvalidInput","replace","toLowerCase","finally","NewError","TextField","onChange","label","helperText","Button","disabled","variant","color","onClick","v","Boolean","ReactDOM","render","Provider","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","api","axios","baseURL","timeout","headers","CatchAxiosError","ErrorObject","response","code","method","Endpoints","Buffer","ClientSecret","toString","qs","grant_type","setItem","CallbackFunction","refresh_token","parse","access_token","role","pageNumber","page","body","projectName","GetRepo","repoId","DefaultReadme","userName"],"mappings":"qOAEMA,EAAcC,wBAAc,M,sCCKnB,SAASC,EAAcC,GAElC,OADAC,QAAQC,IAAIF,GAER,kBAAC,IAAD,CAAMG,GAAIH,EAAMI,KACZ,yBAAKC,UAAU,iBACX,yBAAKA,UAAW,cACXL,EAAMM,KACD,kBAACC,EAAA,EAAD,CACEF,UAAU,qBACVG,MAAOR,EAAMM,KAAKG,MAAMC,OAAOC,OAC9B,IAGb,yBAAKN,UAAU,gBACVL,EAAMY,aACP,+B,4BCbL,SAASC,IAAQ,IAAD,EACHC,qBAAWjB,GAA7BkB,EADqB,EACrBA,KAAMC,EADe,EACfA,QADe,EAEGC,mBAAS,MAFZ,mBAEtBC,EAFsB,KAEZC,EAFY,KAsB7B,OAnBAC,qBAAU,YACkB,uCAAG,sBAAAC,EAAA,kEAExBC,OAAOC,aAAaC,QAAQC,IAAOC,UAAUC,UAFrB,gCAGfC,YAAsB,IAAIC,gBAAgBP,OAAOQ,SAASC,QAAQC,IAAI,SAASC,MAAK,SAAAC,GAC1FlB,EAAQ,CAAEmB,SAAUD,OACnBE,OAAM,SAAAC,GAAO,MAAMA,KALC,6CAMfC,cAAeL,MAAK,SAAAC,GAC1BlB,EAAQ,CAAEmB,SAAUD,OACnBE,OAAM,SAAAC,GAAO,MAAMA,KARC,wBASnBE,cAAiBN,MAAK,SAAAC,GAC1BlB,GAAQ,SAAAD,GAAI,sBAAUA,EAAV,CAAgByB,UAAWN,UACtCE,OAAM,SAAAC,GAAO,MAAMA,KAXG,0DAazBlB,EAAY,EAAD,IAbc,0DAAH,qDAgB1BsB,KACC,CAACzB,EAASG,IACL,oCACN,kBAACuB,EAAA,EAAD,CAAOC,UAAW,GAEbzB,EAOG,yBAAKb,UAAU,aAAaa,IAN1B,OAAJH,QAAI,IAAJA,OAAA,EAAAA,EAAOyB,WACH,yBAAKnC,UAAU,cACf,yBAAKA,UAAU,gBAAgBU,EAAKyB,UAAUI,KAAO,qCAAuC,gCAC3F7B,EAAKyB,UAAUK,OAAOC,KAAI,SAAAT,GAAC,OAAI,kBAACtC,EAAD,CAAegD,IAAKV,EAAEW,KAAM5C,IAAG,gBAAWiC,EAAEW,MAAQpC,aAAcyB,EAAEzB,aAAcN,KAAM+B,QAExH,yBAAKhC,UAAU,eAAc,8BAAM,kBAAC4C,EAAA,EAAD,OAA2B,6BAAK,6BAAK,uDCjCvE,SAASC,EAAKlD,GAAQ,IAAD,EACIiB,mBAAS,MADb,mBAC3BkC,EAD2B,KACdC,EADc,OAEFnC,mBAAS,MAFP,mBAE3BC,EAF2B,KAEjBC,EAFiB,KAIlCC,qBAAU,WACR,IACEiC,YAAYrD,EAAMsD,MAAMC,OAAOC,QAAQvB,MAAK,SAAAC,GAC1CkB,EAAelB,MACdE,OAAM,SAAAC,GAAM,MAAMA,KACtB,MAAMA,GACLlB,EAAYkB,MAEb,CAACrC,EAAOoD,IACX,IAAM9C,EAAO,CACXmD,WAAY,CACRhD,MAAM,CACJC,OAAO,CACLC,KAAM,gHAIZ+C,YAAa,CACXjD,MAAM,CACJC,OAAO,CACLC,KAAM,gHAIZgD,SAAU,CACRlD,MAAM,CACJC,OAAO,CACLC,KAAM,4FAKhB,OACA,oCACA,kBAAC+B,EAAA,EAAD,CAAOC,UAAW,GAEbzB,EASG,yBAAKb,UAAU,aAAaa,GAR9BiC,EACI,yBAAK9C,UAAU,cACf,yBAAKA,UAAU,gBAAgB8C,EAAYvC,aAAeuC,EAAYvC,aAAe,IACrF,kBAACb,EAAD,CAAeK,IAAK+C,EAAY1C,MAAMmD,KAAKjD,KAAMC,aAAa,YAAYN,KAAMA,EAAKqD,WACrF,kBAAC5D,EAAD,CAAeK,IAAG,gBAAWJ,EAAMsD,MAAMC,OAAOC,OAA9B,aAAiD5C,aAAa,gBAAgBN,KAAMA,EAAKoD,cAC3G,kBAAC3D,EAAD,CAAeK,IAAG,sBAAiBJ,EAAMsD,MAAMC,OAAOC,QAAU5C,aAAa,cAAcN,KAAMA,EAAKmD,cAEtG,yBAAKpD,UAAU,eAAc,8BAAM,kBAAC4C,EAAA,EAAD,OAA2B,6BAAK,6BAAK,yD,8BCvDhFY,EAAoB,CACpB,KAAQ,GACR,IAAO,GACP,YAAe,qBACf,MAAS,CACL,OAAU,CACN,KAAQ,wJAGhB,YAAc,GAGdC,EAAiB,CACG,IAAO,MACP,QAAW,KACX,UAAY,EACZ,YAAe,kBACf,QAAW,CACP,IAAO,GACP,KAAQ,IAEZ,YAAc,EACd,YAAe,sBAGnCC,EAAmB,CACnB,KAAS,GACT,OAAW,CACP,KAAS,KAIbC,EAAqB,CACD,YAAe,CACf,UAAY,EACZ,SAAY,EACZ,KAAQ,cACR,gBAAkB,GAElB,aAAgB,CAChB,CACI,KAAQ,UACR,SAAW,EACX,OAAU,YAEd,CACI,KAAQ,SACR,SAAW,EACX,OAAU,WAEd,CACI,KAAQ,UACR,SAAW,EACX,OAAU,YAEd,CACI,KAAQ,SACR,SAAW,EACX,OAAU,YAGd,WAAc,CACd,UAAY,EACZ,SAAW,EACX,KAAQ,SACR,gBAAkB,GAElB,KAAQ,4BAG1BC,EAAyB,CAC9B,CACC,KAAQ,8CACR,MAAS,GACT,QAAW,GACX,MAAS,EACT,kBAAqB,kBACrB,OAAU,GACV,YAAe,aACf,KAAQ,qBAET,CACC,KAAQ,6BACR,MAAS,GACT,QAAW,GACX,MAAS,EACT,kBAAqB,kBACrB,OAAU,GACV,YAAe,aACf,KAAQ,qBAET,CACC,KAAQ,QACR,MAAS,GACT,QAAW,GACX,MAAS,KACT,kBAAqB,kBACrB,OAAU,GACV,YAAe,aACf,KAAQ,qBAET,CACC,KAAQ,SACR,MAAS,GACT,QAAW,GACX,MAAS,KACT,kBAAqB,kBACrB,OAAU,GACV,YAAe,aACf,KAAQ,qBAET,CACC,KAAQ,OACR,MAAS,GACT,QAAW,GACX,MAAS,KACT,kBAAqB,kBACrB,OAAU,GACV,YAAe,aACf,KAAQ,qBAET,CACC,KAAQ,QACR,MAAS,GACT,QAAW,GACX,MAAS,KACT,kBAAqB,kBACrB,OAAU,GACV,YAAe,cACf,KAAQ,qBAET,CACC,KAAQ,SACR,MAAS,GACT,QAAW,GACX,MAAS,KACT,kBAAqB,kBACrB,OAAU,GACV,YAAe,cACf,KAAQ,sBAIJC,EAAqB,CACvB,SAAW,EACX,KAAQ,sCC7INC,EAAgB,SAAAC,GAClB,IAAIC,EAAMD,EAAEE,MAAM,IAKlB,OAJAD,EAAIE,MAAK,WACL,MAAO,GAAMC,KAAKC,YAEtBL,EAAIC,EAAIK,KAAK,KAIXC,EAAoB,uCAAG,WAAOzC,GAAP,iBAAAb,EAAA,sEAEjBuD,EAAe,GAFE,SAGfC,YAAkB3C,EAAKsB,QAAQvB,KAA/B,uCAAoC,WAAM6C,GAAN,eAAAzD,EAAA,yDACtCyD,EAAMjC,OAAOC,KAAI,SAAAT,GAAC,OAAIuC,EAAaG,KAAK1C,QACpCyC,EAAMlC,KAAO,IAFqB,gBAGzBoC,EAAI,EAHqB,YAGlBA,GAAKR,KAAKS,KAAKC,WAAWJ,EAAMlC,KAAO,MAHrB,gCAIxBiC,YAAkB3C,EAAKsB,OAAQwB,GAAG/C,MAAK,SAAAkD,GACzCA,EAAMtC,OAAOC,KAAI,SAAAT,GAAC,OAAIuC,EAAaG,KAAK1C,SACzCD,OAAM,SAAAC,GACLpC,QAAQC,IAAImC,MAPc,OAG2B2C,IAH3B,0DAApC,uDAWH/C,MAAK,WACJhC,QAAQC,IAAI0E,MACbxC,OAAM,SAAAC,GACLpC,QAAQC,IAAImC,MAjBK,cAmBjB+C,EAAiBR,EAAaS,QAAO,SAAChE,EAAGiE,GAGzC,OAFIA,EAAEC,KAAKC,SAAStD,EAAKuD,cAAgBH,EAAEC,KAAKC,SAAStD,EAAKwD,SAC1DrE,EAAE0D,KAAKO,GACJjE,IACR,IAvBkB,kBAwBd+D,GAxBc,oGAAH,sDA+BpBO,EAAgB,uCAAG,WAAMzD,GAAN,eAAAb,EAAA,sEAEjBwC,EAAkB0B,KAAOrD,EAAKuD,YAC9B5B,EAAkBd,IAAMb,EAAKuD,YAAYG,MAAM,EAAG,GAAGC,cAAgB,IAAM1B,EAAcjC,EAAKuD,YAAcjB,KAAKC,UAAUoB,cAAcD,MAAM,EAAG,GAHjI,SAIaE,YAAc5D,EAAKsB,OAAQK,GAJxC,cAIbkC,EAJa,yBAKVA,GALU,oGAAH,sDAYhBC,EAAgB,uCAAG,WAAO9D,EAAM+D,GAAb,eAAA5E,EAAA,6DACrByC,EAAeoC,QAAQlD,KAAOiD,EAAYjD,KAC1Cc,EAAeoC,QAAQnD,IAAMkD,EAAYlD,IAFpB,SAGFU,YAAWvB,EAAKsB,OAAQtB,EAAKiE,YAAarC,GAHxC,cAGjBsC,EAHiB,yBAIdA,GAJc,2CAAH,wDAQTC,EAAiB,uCAAG,WAAMnE,GAAN,mBAAAb,EAAA,+EAELsD,EAAqBzC,GAAMD,MAAK,SAAAqE,GAEhD,OADApE,EAAKqE,aAAa,CAAEC,KAAM,UAAWC,QAAQ,yCACtCH,KACRlE,OAAM,SAAAC,GAEL,OADAH,EAAKqE,aAAa,CAAEC,KAAM,QAASC,QAAQ,kDAAD,OAAoDpE,KACvFA,KAPc,UASH,IAPlBqE,EAFqB,QASbC,OATa,iCAULhB,EAAiBzD,GAAMD,MAAK,SAAAqE,GAExC,OADApE,EAAKqE,aAAa,CAAEC,KAAM,UAAWC,QAAQ,iCACtCH,KACRlE,OAAM,SAAAC,GAEL,OADAH,EAAKqE,aAAa,CAAEC,KAAM,QAASC,QAAQ,0CAAD,OAA4CpE,KAC/EA,KAfU,OAUrBqE,EAVqB,+BAiBpBA,EAAUA,EAAQ,GAjBE,yBAkBEV,EAAiB9D,EAAMwE,GAASzE,MAAK,SAAAqE,GAE5D,OADApE,EAAKqE,aAAa,CAAEC,KAAM,UAAWC,QAAQ,gCACtCH,KACRlE,OAAM,SAAAC,GAEL,OADAH,EAAKqE,aAAa,CAAEC,KAAM,QAASC,QAAQ,yCAAD,OAA2CpE,EAA3C,8BACnCA,KAvBc,WAyBG,WAPxBuE,EAlBqB,QAyBNJ,KAzBM,uBA0BfK,KAAKC,UAAUF,EAAeG,OA1Bf,yBA2BnBC,YAAiB9E,EAAKsB,OAAQoD,EAAe5D,MAAMf,MAAK,SAAAqE,GAE1D,OADApE,EAAKqE,aAAa,CAAEC,KAAM,UAAWC,QAAQ,iCACtCH,KACRlE,OAAM,SAAAC,GAEL,OADAH,EAAKqE,aAAa,CAAEC,KAAM,QAASC,QAAQ,0CAAD,OAA4CpE,KAC/EA,KAhCc,yBAkCO4E,YAAU/E,EAAKsB,OAAQoD,EAAe5D,MAAMf,MAAK,SAAAqE,GAE7E,OADApE,EAAKqE,aAAa,CAAEC,KAAM,UAAWC,QAAQ,0CACtCH,KACRlE,OAAM,SAAAC,GAEL,OADAH,EAAKqE,aAAa,CAAEC,KAAM,QAASC,QAAQ,mDAAD,OAAqDpE,KACxFA,KAvCc,WAyCQ,KAP7B6E,EAlCqB,QAyCDtE,KAzCC,uBA0Cf,IAAIuE,MAAM,qBA1CK,eA2CzBpD,EAAiBwB,KAAO,cACxBxB,EAAiBqD,OAAOC,KAAOH,EAAoBrE,OAAO,GAAGuE,OAAOC,KA5C3C,UA6CnBC,YAAapF,EAAKsB,OAAQoD,EAAe5D,KAAMe,GAAkB9B,MAAK,SAAAqE,GAExE,OADApE,EAAKqE,aAAa,CAAEC,KAAM,UAAWC,QAAQ,0CACtCH,KACRlE,OAAM,SAAAC,GAEL,OADAH,EAAKqE,aAAa,CAAEC,KAAM,QAASC,QAAQ,mDAAD,OAAqDpE,KACxFA,KAlDc,yBAoDnBkF,YAAwBrF,EAAKsB,OAAQoD,EAAe5D,KAAMgB,GAAoB/B,MAAK,SAAAqE,GAErF,OADApE,EAAKqE,aAAa,CAAEC,KAAM,UAAWC,QAAQ,0CACtCH,KACRlE,OAAM,SAAAC,GAEL,OADAH,EAAKqE,aAAa,CAAEC,KAAM,QAASC,QAAQ,mDAAD,OAAqDpE,KACxFA,KAzDc,eA2DzB4B,EAAuBnB,KAAI,SAAAT,GACvB,OAAOmF,YAAyBtF,EAAKsB,OAAQoD,EAAe5D,KAAMX,GAAGJ,MAAK,SAAAqE,GAEtE,OADApE,EAAKqE,aAAa,CAAEC,KAAM,UAAWC,QAAQ,sCAAD,OAAwCpE,EAAEoF,KAA1C,2BAAiEpF,EAAEqF,YAAnE,gBACrCpB,KACRlE,OAAM,SAAAC,GAEL,OADAH,EAAKqE,aAAa,CAAEC,KAAM,QAASC,QAAQ,sCAAD,OAAwCpE,EAAEoF,KAA1C,2BAAiEpF,EAAEqF,YAAnE,gCAAsGrF,KACzIA,QAGfZ,IAAOC,UAAUiG,iBAAiB7E,KAAI,SAAAT,GAClC,OAAOuF,YAAuB1F,EAAKsB,OAAQoD,EAAe5D,KAAMX,GAAGJ,MAAK,SAAAqE,GAEpE,OADApE,EAAKqE,aAAa,CAAEC,KAAM,UAAWC,QAAQ,2BAAD,OAA6BpE,EAA7B,gBACrCiE,KACRlE,OAAM,SAAAC,GAEL,OADAH,EAAKqE,aAAa,CAAEC,KAAM,QAASC,QAAQ,2BAAD,OAA6BpE,EAA7B,gCAAsDA,KACzFA,QA1EU,UA6EnBwF,YAAgB3F,EAAKsB,OAAQoD,EAAe5D,KAAMkB,GAAoBjC,MAAK,SAAAqE,GAE7E,OADApE,EAAKqE,aAAa,CAAEC,KAAM,UAAWC,QAAQ,iCACtCH,KACRlE,OAAM,SAAAC,GAEL,OADAH,EAAKqE,aAAa,CAAEC,KAAM,QAASC,QAAQ,0CAAD,OAA4CpE,KAC/EA,KAlFc,QAoFzBZ,IAAOC,UAAUoG,QAAQhF,KAAI,SAAAT,GACzB,OAAO0F,YAAc7F,EAAKsB,OAAQoD,EAAe5D,KAAMX,GAAGJ,MAAK,SAAAqE,GAE3D,OADApE,EAAKqE,aAAa,CAAEC,KAAM,UAAWC,QAAQ,2BAAD,OAA6BpE,EAAE2F,SAA/B,gBACrC1B,KACRlE,OAAM,SAAAC,GAEL,OADAH,EAAKqE,aAAa,CAAEC,KAAM,QAASC,QAAQ,2BAAD,OAA6BpE,EAAE2F,SAA/B,gCAA+D3F,KAClGA,QA1FU,uHAAH,sD,MCvDf,SAASoB,EAAWzD,GAAQ,IAAD,EACAiB,mBAAS,CAACgH,IAAM,KAAMC,QAAQ,KAAMhC,QAAQ,OAD5C,mBAC/BiC,EAD+B,KAClBC,EADkB,OAEMnH,mBAAS,CACjDgH,KAAM,EACNC,SAAS,EACThC,SAAS,IALyB,mBAE/BmC,EAF+B,KAEfC,EAFe,OAOVrH,mBAAS,CACjCwF,QAAU,GACVU,MAAO,GACPoB,YAAa,IAVqB,mBAO/BC,EAP+B,KAOvBC,EAPuB,KAahCC,EAAqB,SAAAC,GACvB,IAAIC,EAAYJ,EAAOG,EAAMnC,MAC7BoC,EAAU7D,KAAK4D,EAAMlC,SACrBgC,EAAU,eACHD,EADE,eAEJG,EAAMnC,KAAQoC,MAIjBC,EAAoB,SAAAxG,GACtB+F,EAAe,eAAID,EAAL,eAAmB9F,EAAE+E,OAAO0B,GAAKzG,EAAE+E,OAAO2B,UAEtDC,EAAwB,uCAAG,4BAAA3H,EAAA,kEAErB8G,EAAYF,IAFS,uBAEHK,EAAkB,eAAID,EAAL,CAAqBJ,KAAK,EAAMgB,cAAc,KAF5D,6BAGrBd,EAAYD,QAHS,uBAGCI,EAAkB,eAAID,EAAL,CAAqBH,SAAS,EAAMe,cAAc,KAHpE,6BAIrBd,EAAYjC,QAJS,wBAICoC,EAAkB,eAAID,EAAL,CAAqBnC,SAAS,EAAM+C,cAAc,KAJpE,kCAKzBR,EAAU,eAAID,EAAL,CAAYD,YAAW,KALP,UAMnBlC,EAAkB,CACpB7C,OAASxD,EAAMsD,MAAMC,OAAOC,OAC5B2C,YAAW,UAAMgC,EAAYjC,QAAQgD,QAAQ,KAAM,KAAKC,cAA7C,YAA8DhB,EAAYF,KACrFxC,YAAW,UAAM0C,EAAYD,QAAQiB,YAAY,KAAM,OAA5C,YAAsDhB,EAAYF,KAC7EvC,MAAQyC,EAAYF,IACpB1B,aAAcmC,IACftG,OAAM,SAAAC,GACL,MAAMA,KACP+G,SAAQ,WACPX,EAAU,eAAID,EAAL,CAAYD,YAAW,QAfX,0DAmBrBc,EAAWb,EAAOrB,MAAMpC,KAAb,MACf0D,EAAU,eAAID,EAAL,CAAarB,MAAOkC,EAAUd,YAAW,KApBzB,0DAAH,qDAwBxB9B,EAAU,SAAAzG,GACZ,OACI,uBAAG+C,IAAK/C,EAAM+C,IAAK1C,UAAWL,EAAMK,WAAYL,EAAM2I,QAI9D,OAAQ,oCACJ,yBAAKtI,UAAU,cACX,kBAACqC,EAAA,EAAD,CAAOC,UAAW,GAEd,kBAAC2G,EAAA,EAAD,CAAW9C,KAAK,SAASO,MAAOsB,EAAeJ,IAAKa,GAAG,MAAMS,SAAUV,EAAmBW,MAAM,kBAAkBC,WAAW,aAFjI,IAE+I,6BAC3I,kBAACH,EAAA,EAAD,CAAW9C,KAAK,OAAOO,MAAOsB,EAAeH,QAASY,GAAG,UAAUS,SAAUV,EAAmBW,MAAM,qBAAqBC,WAAW,gBAAgB,6BACtJ,kBAACH,EAAA,EAAD,CAAW9C,KAAK,OAAOO,MAAOsB,EAAenC,QAAS4C,GAAG,UAAUS,SAAUV,EAAmBW,MAAM,qBAAqBC,WAAW,iCAAiC,6BACvK,kBAACC,EAAA,EAAD,CAAQC,SAAUnB,EAAOD,WAAYqB,QAAQ,YAAYC,MAAM,UAAUC,QAASd,GAA2BR,EAAOD,WAAa,kBAACtF,EAAA,EAAD,CAAkBL,KAAM,KAAQ,eACjK,yBAAKvC,UAAU,kBACVmI,EAAO/B,QAAQ3D,KAAI,SAACT,EAAE0H,GAAH,OAAS,kBAACtD,EAAD,CAASpG,UAAU,gBAAgBsI,MAAOtG,EAAGU,IAAKgH,OAC9EvB,EAAOrB,MAAMrE,KAAI,SAACT,EAAE0H,GAAH,OAAS,kBAACtD,EAAD,CAASpG,UAAU,eAAesI,MAAOtG,EAAGU,IAAKgH,WCzEjF,SAASnF,EAAa5E,GACnC,OAAQ,oCACF,yBAAKK,UAAU,cACX,4BAAQL,EAAMsD,MAAMC,OAAOC,SCQnBwG,QACW,cAA7B1I,OAAOQ,SAASkG,UAEe,UAA7B1G,OAAOQ,SAASkG,UAEhB1G,OAAOQ,SAASkG,SAAS1E,MACvB,2D,mBCQN2G,IAASC,OAAO,mBAfH,WAAO,IAAD,EACSjJ,mBAAS,MADlB,mBACRF,EADQ,KACFC,EADE,KAGf,OACI,kBAAC,IAAD,KACI,kBAACnB,EAAYsK,SAAb,CAAsBpB,MAAO,CAAChI,OAAMC,YACpC,kBAAC,IAAD,CAAOoJ,OAAK,EAACC,KAAK,IAAIC,UAAWzJ,IACjC,kBAAC,IAAD,CAAOuJ,OAAK,EAACC,KAAK,gBAAgBC,UAAWpH,IAC7C,kBAAC,IAAD,CAAOkH,OAAK,EAACC,KAAK,yBAAyBC,UAAW1F,IACtD,kBAAC,IAAD,CAAOwF,OAAK,EAACC,KAAK,sBAAsBC,UAAW7G,QAM/C,MAAU8G,SAASC,eAAe,SDyG5C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1I,MAAK,SAAA2I,GACJA,EAAaC,gBAEdzI,OAAM,SAAA2E,GACL9G,QAAQ8G,MAAMA,EAAM+D,a,unBEpIxBC,EAAMC,IAAM5E,OAAO,CACnB6E,QAAS,iCACTC,QAAS,IACTC,QAAS,CAAC,eAAgB,sBAGxBC,EAAkB,SAAAC,GACpB,OAAIA,EAAYC,UACZrL,QAAQC,IAAImL,EAAYC,SAASH,SAC3B,0CAAN,OAAiDE,EAAYC,SAAS9C,OAAtE,sBAA0F3B,KAAKC,UAAUuE,EAAYC,SAASpJ,QAExH,WAAN,OAAmBmJ,EAAYP,UAIjClJ,EAAwB,SAAA2J,GAC1B,OAAOR,EAAI,CACPE,QAAS,qCACTO,OAAQ,OACRpL,IAAKqB,IAAOC,UAAU+J,UAAU7J,sBAChCuJ,QAAS,CACL,eAAiB,oCACjB,8BAA2B,IAAIO,EAAOjK,IAAOC,UAAUC,SAAS,IAAIF,IAAOC,UAAUiK,cAAcC,SAAS,YAEhH1J,KAAM2J,IAAG/E,UAAU,CACfgF,WAAa,qBACbP,KAAMA,MAEXtJ,MAAK,SAAAqJ,GAGJ,OAFArL,QAAQC,IAAR,8BAAmC2G,KAAKC,UAAUwE,EAASpJ,QAC3DZ,OAAOC,aAAawK,QAAQtK,IAAOC,UAAUC,SAAUkF,KAAKC,UAAUwE,EAASpJ,OACxEoJ,EAASpJ,QACjBE,OAAM,SAAA2E,GACL,MAAMqE,EAAgBrE,OAIxBzE,EAAe,WAA8B,IAA7B0J,EAA4B,uDAAT,KACrC,OAAOjB,EAAI,CACPE,QAAS,qCACTO,OAAQ,OACRpL,IAAKqB,IAAOC,UAAU+J,UAAU7J,sBAChCuJ,QAAS,CACL,eAAiB,oCACjB,8BAA2B,IAAIO,EAAOjK,IAAOC,UAAUC,SAAS,IAAIF,IAAOC,UAAUiK,cAAcC,SAAS,YAEhH1J,KAAM2J,IAAG/E,UAAU,CACfgF,WAAa,gBACbG,cAAepF,KAAKqF,MAAM5K,OAAOC,aAAaC,QAAQC,IAAOC,UAAUC,WAAWsK,kBAEvFhK,KAZI,+BAAAZ,EAAA,MAYC,WAAMiK,GAAN,SAAAjK,EAAA,yDACJpB,QAAQC,IAAR,4BAAiC2G,KAAKC,UAAUwE,EAASpJ,QACzDZ,OAAOC,aAAawK,QAAQtK,IAAOC,UAAUC,SAAUkF,KAAKC,UAAUwE,EAASpJ,QAC5E8J,EAHC,gCAIaA,IAJb,wEAMOV,EAASpJ,MANhB,2CAZD,uDAmBJE,OAAM,SAAA2E,GACL,MAAMqE,EAAgBrE,OAIxBxE,EAAiB,SAAjBA,IACF,OAAOwI,EAAI,CACPS,OAAQ,MACRpL,IAAKqB,IAAOC,UAAU+J,UAAUlJ,eAChC4I,QAAS,CACL,+BAA4BtE,KAAKqF,MAAM5K,OAAOC,aAAaC,QAAQC,IAAOC,UAAUC,WAAWwK,eAEnG5I,OAAQ,CACJ6I,KAAM,WAEXnK,MAAK,SAAAqJ,GACJ,OAAOA,EAASpJ,QACjBE,MAXI,+BAAAf,EAAA,MAWE,WAAM0F,GAAN,SAAA1F,EAAA,yDACwB,MAA1B0F,EAAMuE,SAAS9C,OADb,gCAEYlG,GAAa,kBAAMC,OAF/B,qDAIK6I,EAAgBrE,GAJrB,2CAXF,wDAmBL1D,EAAc,SAAdA,EAAcG,GAChB,OAAOuH,EAAI,CACPS,OAAQ,MACRpL,IAAI,GAAD,OAAKqB,IAAOC,UAAU+J,UAAUlJ,eAAhC,YAAkDiB,GACrD2H,QAAS,CACL,+BAA4BtE,KAAKqF,MAAM5K,OAAOC,aAAaC,QAAQC,IAAOC,UAAUC,WAAWwK,eAEnG5I,OAAQ,CACJ6I,KAAM,YAEXnK,MAAK,SAAAqJ,GACJ,OAAOA,EAASpJ,QACjBE,MAXI,+BAAAf,EAAA,MAWE,WAAM0F,GAAN,SAAA1F,EAAA,yDACwB,MAA1B0F,EAAMuE,SAAS9C,OADb,gCAEYlG,GAAa,kBAAMe,EAAYG,MAF3C,qDAIK4H,EAAgBrE,GAJrB,2CAXF,wDAmBLlC,EAAoB,SAApBA,EAAqBrB,GAA0B,IAAlB6I,EAAiB,uDAAN,EAC1C,OAAOtB,EAAI,CACPS,OAAQ,MACRpL,IAAI,GAAD,OAAKqB,IAAOC,UAAU+J,UAAUlJ,eAAhC,YAAkDiB,EAAlD,cACH2H,QAAS,CACL,+BAA4BtE,KAAKqF,MAAM5K,OAAOC,aAAaC,QAAQC,IAAOC,UAAUC,WAAWwK,eAEnG5I,OAAQ,CACJ+I,KAAMD,KAEXpK,MAAK,SAAAqJ,GACJ,OAAOA,EAASpJ,QACjBE,MAXI,+BAAAf,EAAA,MAWE,WAAM0F,GAAN,SAAA1F,EAAA,yDACwB,MAA1B0F,EAAMuE,SAAS9C,OADb,gCAEYlG,GAAa,kBAAMuC,EAAkBrB,EAAQ6I,MAFzD,qDAIKjB,EAAgBrE,GAJrB,2CAXF,wDAmBLjB,EAAgB,SAAhBA,EAAiBtC,EAAQ+I,GAC3B,OAAOxB,EAAI,CACPS,OAAQ,OACRpL,IAAI,GAAD,OAAKqB,IAAOC,UAAU+J,UAAUlJ,eAAhC,YAAkDiB,EAAlD,cACH2H,QAAS,CACL,+BAA4BtE,KAAKqF,MAAM5K,OAAOC,aAAaC,QAAQC,IAAOC,UAAUC,WAAWwK,eAEnGjK,KAAM2E,KAAKC,UAAUyF,KACtBtK,MAAK,SAAAqJ,GACJ,OAAOA,EAASpJ,QACjBE,MATI,+BAAAf,EAAA,MASE,WAAM0F,GAAN,SAAA1F,EAAA,yDACwB,MAA1B0F,EAAMuE,SAAS9C,OADb,gCAEYlG,GAAa,kBAAMwD,EAActC,EAAQ+I,MAFrD,qDAIKnB,EAAgBrE,GAJrB,2CATF,wDAqCLtD,EAAa,SAAbA,EAAcD,EAAQgJ,EAAcD,GACtC,OAAOxB,EAAI,CACPS,OAAQ,OACRpL,IAAI,GAAD,OAAKqB,IAAOC,UAAU+J,UAAUgB,QAAhC,YAA2CjJ,EAA3C,YAAqDgJ,GACxDrB,QAAS,CACL,+BAA4BtE,KAAKqF,MAAM5K,OAAOC,aAAaC,QAAQC,IAAOC,UAAUC,WAAWwK,eAEnGjK,KAAM2E,KAAKC,UAAUyF,KACtBtK,MAAK,SAAAqJ,GACJ,OAAOA,EAASpJ,QACjBE,MATI,+BAAAf,EAAA,MASE,WAAM0F,GAAN,SAAA1F,EAAA,yDACwB,MAA1B0F,EAAMuE,SAAS9C,OADb,gCAEYlG,GAAa,kBAAMmB,EAAWD,EAAQgJ,EAAaD,MAF/D,qDAIKnB,EAAgBrE,GAJrB,2CATF,wDAiBLO,EAAe,SAAfA,EAAgB9D,EAAQkJ,EAASH,GACnC,OAAOxB,EAAI,CACPS,OAAQ,OACRpL,IAAI,GAAD,OAAKqB,IAAOC,UAAU+J,UAAUgB,QAAhC,YAA2CjJ,EAA3C,YAAqDkJ,EAArD,kBACHvB,QAAS,CACL,+BAA4BtE,KAAKqF,MAAM5K,OAAOC,aAAaC,QAAQC,IAAOC,UAAUC,WAAWwK,eAEnGjK,KAAM2E,KAAKC,UAAUyF,KACtBtK,MAAK,SAAAqJ,GACJ,OAAOA,EAASpJ,QACjBE,MATI,+BAAAf,EAAA,MASE,WAAM0F,GAAN,SAAA1F,EAAA,yDACwB,MAA1B0F,EAAMuE,SAAS9C,OADb,gCAEYlG,GAAa,kBAAMgF,EAAa9D,EAAQkJ,EAAQH,MAF5D,qDAIKnB,EAAgBrE,GAJrB,2CATF,wDAiBLE,EAAY,SAAZA,EAAazD,EAAQkJ,EAAQL,GAC/B,OAAOtB,EAAI,CACPS,OAAQ,MACRpL,IAAI,GAAD,OAAKqB,IAAOC,UAAU+J,UAAUgB,QAAhC,YAA2CjJ,EAA3C,YAAqDkJ,EAArD,kBACHvB,QAAS,CACL,+BAA4BtE,KAAKqF,MAAM5K,OAAOC,aAAaC,QAAQC,IAAOC,UAAUC,WAAWwK,eAEnG5I,OAAQ,CACJ+I,KAAMD,KAEXpK,MAAK,SAAAqJ,GACJ,OAAOA,EAASpJ,QACjBE,MAXI,+BAAAf,EAAA,MAWE,WAAM0F,GAAN,SAAA1F,EAAA,yDACwB,MAA1B0F,EAAMuE,SAAS9C,OADb,gCAEYlG,GAAa,kBAAM2E,EAAUzD,EAAQkJ,EAAQL,MAFzD,qDAIKjB,EAAgBrE,GAJrB,2CAXF,wDAmBLC,EAAmB,SAAnBA,EAAoBxD,EAAQkJ,GAK9B,OAAO3B,EAAI,CACPS,OAAQ,OACRpL,IAAI,GAAD,OAAKqB,IAAOC,UAAU+J,UAAUgB,QAAhC,YAA2CjJ,EAA3C,YAAqDkJ,EAArD,QACHvB,QAAS,CACL,eAAiB,oCACjB,+BAA4BtE,KAAKqF,MAAM5K,OAAOC,aAAaC,QAAQC,IAAOC,UAAUC,WAAWwK,eAEnGjK,KAAM2J,IAAG/E,UAAU,CACf,YAAc6F,QAEnB1K,MAAK,SAAAqJ,GACJ,OAAOA,KACRlJ,MAZI,+BAAAf,EAAA,MAYE,WAAM0F,GAAN,SAAA1F,EAAA,yDACwB,MAA1B0F,EAAMuE,SAAS9C,OADb,gCAEYlG,GAAa,kBAAM0E,EAAiBxD,EAAQkJ,MAFxD,qDAIKtB,EAAgBrE,GAJrB,2CAZF,wDAoBLQ,EAA0B,SAA1BA,EAA2B/D,EAAQkJ,EAAQH,GAC7C,OAAOxB,EAAI,CACPS,OAAQ,MACRpL,IAAI,GAAD,OAAKqB,IAAOC,UAAU+J,UAAUgB,QAAhC,YAA2CjJ,EAA3C,YAAqDkJ,EAArD,6BACHvB,QAAS,CACL,+BAA4BtE,KAAKqF,MAAM5K,OAAOC,aAAaC,QAAQC,IAAOC,UAAUC,WAAWwK,eAEnGjK,KAAM2E,KAAKC,UAAUyF,KACtBtK,MAAK,SAAAqJ,GACJ,OAAOA,KACRlJ,MATI,+BAAAf,EAAA,MASE,WAAM0F,GAAN,SAAA1F,EAAA,yDACwB,MAA1B0F,EAAMuE,SAAS9C,OADb,gCAEYlG,GAAa,kBAAMiF,EAAwB/D,EAAQkJ,EAAQH,MAFvE,qDAIKnB,EAAgBrE,GAJrB,2CATF,wDAiBLS,EAA2B,SAA3BA,EAA4BhE,EAAQkJ,EAAQH,GAC9C,OAAOxB,EAAI,CACPS,OAAQ,OACRpL,IAAI,GAAD,OAAKqB,IAAOC,UAAU+J,UAAUgB,QAAhC,YAA2CjJ,EAA3C,YAAqDkJ,EAArD,wBACHvB,QAAS,CACL,+BAA4BtE,KAAKqF,MAAM5K,OAAOC,aAAaC,QAAQC,IAAOC,UAAUC,WAAWwK,eAEnGjK,KAAM2E,KAAKC,UAAUyF,KACtBtK,MAAK,SAAAqJ,GACJ,OAAOA,KACRlJ,MATI,+BAAAf,EAAA,MASE,WAAM0F,GAAN,SAAA1F,EAAA,yDACwB,MAA1B0F,EAAMuE,SAAS9C,OADb,gCAEYlG,GAAa,kBAAMkF,EAAyBhE,EAAQkJ,EAAQH,MAFxE,qDAIKnB,EAAgBrE,GAJrB,2CATF,wDAiBLa,EAAyB,SAAzBA,EAA0BpE,EAAQkJ,EAAQE,GAC5C,OAAO7B,EAAI,CACPS,OAAQ,MACRpL,IAAI,GAAD,OAAKqB,IAAOC,UAAU+J,UAAUgB,QAAhC,YAA2CjJ,EAA3C,YAAqDkJ,EAArD,8BAAiFE,GACpFzB,QAAS,CACL,+BAA4BtE,KAAKqF,MAAM5K,OAAOC,aAAaC,QAAQC,IAAOC,UAAUC,WAAWwK,iBAEpGlK,MAAK,SAAAqJ,GACJ,OAAOA,KACRlJ,MARI,+BAAAf,EAAA,MAQE,WAAM0F,GAAN,SAAA1F,EAAA,yDACwB,MAA1B0F,EAAMuE,SAAS9C,OADb,gCAEYlG,GAAa,kBAAMsF,EAAuBpE,EAAQkJ,EAAQE,MAFtE,qDAIKxB,EAAgBrE,GAJrB,2CARF,wDAgBLc,EAAkB,SAAlBA,EAAmBrE,EAAQkJ,EAAQH,GACrC,OAAOxB,EAAI,CACPS,OAAQ,MACRpL,IAAI,GAAD,OAAKqB,IAAOC,UAAU+J,UAAUgB,QAAhC,YAA2CjJ,EAA3C,YAAqDkJ,EAArD,qBACHvB,QAAS,CACL,+BAA4BtE,KAAKqF,MAAM5K,OAAOC,aAAaC,QAAQC,IAAOC,UAAUC,WAAWwK,eAEnGjK,KAAM2E,KAAKC,UAAUyF,KACtBtK,MAAK,SAAAqJ,GACJ,OAAOA,KACRlJ,MATI,+BAAAf,EAAA,MASE,WAAM0F,GAAN,SAAA1F,EAAA,yDACwB,MAA1B0F,EAAMuE,SAAS9C,OADb,gCAEYlG,GAAa,kBAAMuF,EAAgBrE,EAAQkJ,EAAQH,MAF/D,qDAIKnB,EAAgBrE,GAJrB,2CATF,wDAiBLgB,EAAgB,SAACvE,EAAQkJ,EAAQH,GACnC,OAAOxB,EAAI,CACPS,OAAQ,OACRpL,IAAI,GAAD,OAAKqB,IAAOC,UAAU+J,UAAUgB,QAAhC,YAA2CjJ,EAA3C,YAAqDkJ,EAArD,sCACHvB,QAAS,CACL,+BAA4BtE,KAAKqF,MAAM5K,OAAOC,aAAaC,QAAQC,IAAOC,UAAUC,WAAWwK,eAEnGjK,KAAM2E,KAAKC,UAAUyF,KACtBtK,MAAK,SAAAqJ,GACJ,OAAOA,KACRlJ,MATI,+BAAAf,EAAA,MASE,WAAM0F,GAAN,SAAA1F,EAAA,yDACwB,MAA1B0F,EAAMuE,SAAS9C,OADb,gCAEYlG,GAAa,kBAAMuF,EAAgBrE,EAAQkJ,EAAQH,MAF/D,qDAIKnB,EAAgBrE,GAJrB,2CATF,0D,8EC9TX,sCAAM4F,EAAa,6uF,+BCAnB,kCACO,IAAMlL,EAAS,CAClBC,UAAU,CACNC,SAAU,qBACVgK,aAAc,mCACdF,UAAW,CACP7J,sBAAwB,eACxBW,eAAiB,QACjBkK,QAAU,gBAEd9E,iBAAkB,CAAC,yCAA0C,0CAC7DG,QCXkB,CACtB,CACE,KAAQ,sBACR,SAAY,iBACZ,WAAc,CACZ,KAAQ,0BACR,SAAY,UACZ,IAAO,uXACP,gBAAmB,sDACnB,mBAAsB,uDAG1B,CACE,KAAQ,sBACR,SAAY,eACZ,WAAc,CACZ,KAAQ,0BACR,SAAY,sBACZ,IAAO,+IACP,gBAAmB,sDACnB,mBAAsB,uDAG1B,CACE,KAAQ,sBACR,SAAY,cACZ,WAAc,CACZ,KAAQ,0BACR,SAAY,UACZ,IAAO,uXACP,gBAAmB,sDACnB,mBAAsB,uDAG1B,CACE,KAAQ,sBACR,SAAY,cACZ,WAAc,CACZ,KAAQ,0BACR,SAAY,sBACZ,IAAO,+IACP,gBAAmB,sDACnB,mBAAsB,uDAG1B,CACE,KAAQ,sBACR,SAAY,gBACZ,WAAc,CACZ,KAAQ,0BACR,SAAY,sBACZ,IAAO,+IACP,gBAAmB,sDACnB,mBAAsB,2D","file":"static/js/main.3d1ced9b.chunk.js","sourcesContent":["import {createContext} from 'react'\n\nconst userContext = createContext(null)\n\nexport { userContext }","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { Link } from \"react-router-dom\";\nimport CardMedia from '@material-ui/core/CardMedia';\nimport './css/team-list-paper.css'\n\nexport default function TeamListPaper(props) {\n    console.log(props)\n    return (\n        <Link to={props.url}>\n            <div className=\"root-teamlist\">\n                <div className={\"data-image\"}>\n                    {props.info\n                        ? <CardMedia\n                            className=\"data-image-content\"\n                            image={props.info.links.avatar.href}\n                        /> : \"\"\n                    }\n                </div>\n                <div className=\"data-content\">\n                    {props.display_name}\n                    <p>{}</p>\n                </div>\n            </div>\n        </Link>\n    );\n}","import React, { useState, useEffect, useContext } from 'react';\nimport { userContext } from '../context/userContext'\nimport { GetAccesTokenFromCode, GetTeamsOfUser, RefreshToken } from '../data-access/request-layer'\nimport { Config } from '../data-access/config'\nimport TeamListPaper from '../components/team-list-paper'\nimport Paper from '@material-ui/core/Paper';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './css/Home.css';\n\nexport default function Home() {\n  const { user, setUser } = useContext(userContext)\n  const [apiError, setApiError] = useState(null)\n  useEffect(() => {\n    const GetIntialInformation = async () => {\n      try {\n        !window.localStorage.getItem(Config.Bitbucket.ClientId)\n          ? await GetAccesTokenFromCode(new URLSearchParams(window.location.search).get('code')).then(data => {\n            setUser({ userData: data })\n          }).catch(e => { throw e })\n          : await RefreshToken().then(data => {\n            setUser({ userData: data })\n          }).catch(e => { throw e })\n        await GetTeamsOfUser().then(data => {\n          setUser(user => ({ ...user, userTeams: data }))\n        }).catch(e => { throw e })\n      } catch (e) {\n        setApiError(e)\n      }\n    }\n    GetIntialInformation()\n  }, [setUser, setApiError])\n  return (<>\n    <Paper elevation={2}>\n      {\n        !apiError ?\n          user ?.userTeams\n            ? <div className=\"teams-list\">\n              <div className=\"home-heading\">{user.userTeams.size ? \"Please select a Team from the list\" : \"You don't belong to any team\"}</div>\n              {user.userTeams.values.map(e => <TeamListPaper key={e.uuid} url={`/team/${e.uuid}`} display_name={e.display_name} info={e} />)}\n            </div>\n            : <div className=\"Home-Loader\"><span><CircularProgress /></span><br/><br/><span>Loading Your Teams</span></div>\n          : <div className=\"Api-Error\">{apiError}</div>\n      }\n    </Paper>\n  </>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport { GetTeamById } from '../data-access/request-layer'\nimport TeamListPaper from '../components/team-list-paper'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Paper from '@material-ui/core/Paper';\nimport './css/Home.css';\n\nexport default function Team(props) {\n  const [teamDetails, setTeamDetails] = useState(null)\n  const [apiError, setApiError] = useState(null)\n\n  useEffect(() => {\n    try{\n      GetTeamById(props.match.params.teamId).then(data => {\n        setTeamDetails(data)\n      }).catch(e => {throw e})\n    }catch(e) {\n      setApiError(e)\n    }\n  }, [props, setTeamDetails])\n  const info = {\n    CreateRepo: {\n        links:{\n          avatar:{\n            href: \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRg4i08EuAeoPVS3EVs91aU3_E1eSKTECTo-57BRlrJM9t2fZSf\"\n          }\n        }\n      },\n      ViewProject: {\n        links:{\n          avatar:{\n            href: \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQba4NBe1pHvyeEuALzd0ODAjbvQ6wYSQBnwGsafGMaSot3rorH\"\n          }\n        }\n      },\n      ViewTeam: {\n        links:{\n          avatar:{\n            href: \"https://cdn1.iconfinder.com/data/icons/business-management-set-2-6/64/blue-83-512.png\"\n          }\n        }\n      },\n    }\n  return (\n  <>\n  <Paper elevation={2}>\n    {\n      !apiError ?\n        teamDetails\n          ? <div className=\"teams-list\">\n            <div className=\"home-heading\">{teamDetails.display_name ? teamDetails.display_name : \"\"}</div>\n            <TeamListPaper url={teamDetails.links.html.href} display_name=\"View Team\" info={info.ViewTeam}/>\n            <TeamListPaper url={`/team/${props.match.params.teamId}/projects`} display_name=\"View Projects\" info={info.ViewProject}/>\n            <TeamListPaper url={`/createRepo/${props.match.params.teamId}`} display_name=\"Create Repo\" info={info.CreateRepo}/>\n          </div>\n          : <div className=\"Home-Loader\"><span><CircularProgress /></span><br/><br/><span>Loading Team Details</span></div>\n        : <div className=\"Api-Error\">{apiError}</div>\n    }\n  </Paper>\n</>\n  );\n}","var CreateProjectBody = {\n    \"name\": \"\",\n    \"key\": \"\",\n    \"description\": \"Automated Creation\",\n    \"links\": {\n        \"avatar\": {\n            \"href\": \"https://media-exp1.licdn.com/dms/image/C510BAQGVei9g210jSw/company-logo_200_200/0?e=2159024400&v=beta&t=X2UHWllsrHrBHGdvqCjVfshZaa4ZWjhhgiW_bUxppjw\"\n        }\n    },\n    \"is_private\": true\n}\n\nvar CreateRepoBody = {\n                        \"scm\": \"git\",\n                        \"website\": null,\n                        \"has_wiki\": false,\n                        \"fork_policy\": \"no_public_forks\",\n                        \"project\": {\n                            \"key\": \"\",\n                            \"uuid\": \"\",\n                        },\n                        \"is_private\": true,\n                        \"description\": \"Automated Creation\"\n                    }\n\nvar CreateBranchBody = {\n    \"name\" : \"\",\n    \"target\" : {\n        \"hash\" : \"\",\n    }\n}\n\nvar BranchingModelBody = {\n                        \"development\": {\n                        \"is_valid\": true,\n                        \"enabled\" : true,\n                        \"name\": \"development\",\n                        \"use_mainbranch\": false\n                        },\n                        \"branch_types\": [\n                        {\n                            \"kind\": \"release\",\n                            \"enabled\": false,\n                            \"prefix\": \"release/\"\n                        },\n                        {\n                            \"kind\": \"hotfix\",\n                            \"enabled\": false,\n                            \"prefix\": \"hotfix/\"\n                        },\n                        {\n                            \"kind\": \"feature\",\n                            \"enabled\": false,\n                            \"prefix\": \"feature/\"\n                        },\n                        {\n                            \"kind\": \"bugfix\",\n                            \"enabled\": false,\n                            \"prefix\": \"bugfix/\"\n                        }\n                        ],\n                        \"production\": {\n                        \"is_valid\": true,\n                        \"enabled\": true,\n                        \"name\": \"master\",\n                        \"use_mainbranch\": false\n                        },\n                        \"type\": \"branching_model_settings\"\n                    }\n\nconst BranchRestrictionsBody = [\n\t{\n\t\t\"kind\": \"require_default_reviewer_approvals_to_merge\",\n\t\t\"users\": [],\n\t\t\"pattern\": \"\",\n\t\t\"value\": 1,\n\t\t\"branch_match_kind\": \"branching_model\",\n\t\t\"groups\": [],\n\t\t\"branch_type\": \"production\",\n\t\t\"type\": \"branchrestriction\"\n\t},\n\t{\n\t\t\"kind\": \"require_approvals_to_merge\",\n\t\t\"users\": [],\n\t\t\"pattern\": \"\",\n\t\t\"value\": 1,\n\t\t\"branch_match_kind\": \"branching_model\",\n\t\t\"groups\": [],\n\t\t\"branch_type\": \"production\",\n\t\t\"type\": \"branchrestriction\"\n\t},\n\t{\n\t\t\"kind\": \"force\",\n\t\t\"users\": [],\n\t\t\"pattern\": \"\",\n\t\t\"value\": null,\n\t\t\"branch_match_kind\": \"branching_model\",\n\t\t\"groups\": [],\n\t\t\"branch_type\": \"production\",\n\t\t\"type\": \"branchrestriction\"\n\t},\n\t{\n\t\t\"kind\": \"delete\",\n\t\t\"users\": [],\n\t\t\"pattern\": \"\",\n\t\t\"value\": null,\n\t\t\"branch_match_kind\": \"branching_model\",\n\t\t\"groups\": [],\n\t\t\"branch_type\": \"production\",\n\t\t\"type\": \"branchrestriction\"\n\t},\n\t{\n\t\t\"kind\": \"push\",\n\t\t\"users\": [],\n\t\t\"pattern\": \"\",\n\t\t\"value\": null,\n\t\t\"branch_match_kind\": \"branching_model\",\n\t\t\"groups\": [],\n\t\t\"branch_type\": \"production\",\n\t\t\"type\": \"branchrestriction\"\n\t},\n\t{\n\t\t\"kind\": \"force\",\n\t\t\"users\": [],\n\t\t\"pattern\": \"\",\n\t\t\"value\": null,\n\t\t\"branch_match_kind\": \"branching_model\",\n\t\t\"groups\": [],\n\t\t\"branch_type\": \"development\",\n\t\t\"type\": \"branchrestriction\"\n\t},\n\t{\n\t\t\"kind\": \"delete\",\n\t\t\"users\": [],\n\t\t\"pattern\": \"\",\n\t\t\"value\": null,\n\t\t\"branch_match_kind\": \"branching_model\",\n\t\t\"groups\": [],\n\t\t\"branch_type\": \"development\",\n\t\t\"type\": \"branchrestriction\"\n\t}\n]\n\nconst EnablePipelineBody = {\n    \"enabled\": true,\n    \"type\": \"repository_pipelines_configuration\"\n  }\n\nexport { CreateProjectBody, CreateRepoBody, CreateBranchBody, BranchingModelBody, BranchRestrictionsBody, EnablePipelineBody}","import { GetProjectsOfTeam, GetRepoOfTeam, CreateProject, CreateRepo, CreateBranch, GetBranch, CommitReadmeFile, ConfigureBranchingModel, CreateBranchRestrictions, AssignDefaultReviewers, EnablePipelines, AddKnownHosts } from './request-layer'\nimport { CreateProjectBody, CreateRepoBody, CreateBranchBody, BranchingModelBody, BranchRestrictionsBody, EnablePipelineBody } from './bitbucket-api-helper'\nimport { Config } from './config'\n\nconst ShuffleString = s => {\n    var arr = s.split('');\n    arr.sort(function () {\n        return 0.5 - Math.random();\n    });\n    s = arr.join('');\n    return s;\n}\n\nconst CheckIfProjectExists = async (data) => {\n    try {\n        var TeamProjects = []\n        await GetProjectsOfTeam(data.teamId).then(async data1 => {\n            data1.values.map(e => TeamProjects.push(e))\n            if (data1.size > 10) {\n                for (let x = 2; x <= Math.ceil(parseFloat(data1.size / 10)); x++) {\n                    await GetProjectsOfTeam(data.teamId, x).then(data2 => {\n                        data2.values.map(e => TeamProjects.push(e))\n                    }).catch(e => {\n                        console.log(e)\n                    })\n                }\n            }\n        }).then(() => {\n            console.log(TeamProjects)\n        }).catch(e => {\n            console.log(e)\n        })\n        let ProjectDetails = TeamProjects.reduce((a, c) => {\n            if (c.name.includes(data.AccountName) || c.name.includes(data.orgId))\n                a.push(c)\n            return a\n        }, [])\n        return ProjectDetails\n    }\n    catch (e) {\n        throw e\n    }\n}\n\nconst CreateNewProject = async data => {\n    try {\n        CreateProjectBody.name = data.AccountName\n        CreateProjectBody.key = data.AccountName.slice(0, 2).toUpperCase() + \"_\" + ShuffleString(data.AccountName + Math.random()).toUpperCase().slice(0, 4)\n        let CreateProjectData = await CreateProject(data.teamId, CreateProjectBody)\n        return CreateProjectData\n    }\n    catch (e) {\n        throw e\n    }\n}\n\nconst CreateRepository = async (data, projectData) => {\n    CreateRepoBody.project.uuid = projectData.uuid\n    CreateRepoBody.project.key = projectData.key\n    let create = await CreateRepo(data.teamId, data.ProjectName, CreateRepoBody)\n    return create\n}\n\n\nexport const CreateRepoProcess = async data => {\n    try {\n        var Project = await CheckIfProjectExists(data).then(val => {\n            data.UpdateStatus({ type: \"Message\", Message: `Checking If Project Exists : Success` })\n            return val\n        }).catch(e => {\n            data.UpdateStatus({ type: \"Error\", Message: `Checking If Project Exists : Failed with error ${e}` })\n            return e\n        })\n        if (Project.length == 0)\n            Project = await CreateNewProject(data).then(val => {\n                data.UpdateStatus({ type: \"Message\", Message: `Create New Project : Success` })\n                return val\n            }).catch(e => {\n                data.UpdateStatus({ type: \"Error\", Message: `Create New Project : Failed with error ${e}` })\n                return e\n            })\n        else Project = Project[0]\n        let repoCreateData = await CreateRepository(data, Project).then(val => {\n            data.UpdateStatus({ type: \"Message\", Message: `Create Repository : Success` })\n            return val\n        }).catch(e => {\n            data.UpdateStatus({ type: \"Error\", Message: `Create Repository : Failed with error ${e}, Can't Continue Further` })\n            return e\n        })\n        if (repoCreateData.type === \"error\")\n            throw JSON.stringify(repoCreateData.error)\n        await CommitReadmeFile(data.teamId, repoCreateData.uuid).then(val => {\n            data.UpdateStatus({ type: \"Message\", Message: `Create Readme File : Success` })\n            return val\n        }).catch(e => {\n            data.UpdateStatus({ type: \"Error\", Message: `Create Readme File : Failed with error ${e}` })\n            return e\n        })\n        let RepoBranchesDetails = await GetBranch(data.teamId, repoCreateData.uuid).then(val => {\n            data.UpdateStatus({ type: \"Message\", Message: `Getting Repository Branches : Success` })\n            return val\n        }).catch(e => {\n            data.UpdateStatus({ type: \"Error\", Message: `Getting Repository Branches : Failed with error ${e}` })\n            return e\n        })\n        if (RepoBranchesDetails.size === 0)\n            throw new Error(\"No Branches Found\")\n        CreateBranchBody.name = \"development\"\n        CreateBranchBody.target.hash = RepoBranchesDetails.values[0].target.hash\n        await CreateBranch(data.teamId, repoCreateData.uuid, CreateBranchBody).then(val => {\n            data.UpdateStatus({ type: \"Message\", Message: `Creating Development Branch : Success` })\n            return val\n        }).catch(e => {\n            data.UpdateStatus({ type: \"Error\", Message: `Creating Development Branch : Failed with error ${e}` })\n            return e\n        })\n        await ConfigureBranchingModel(data.teamId, repoCreateData.uuid, BranchingModelBody).then(val => {\n            data.UpdateStatus({ type: \"Message\", Message: `Configuring Branching Model : Success` })\n            return val\n        }).catch(e => {\n            data.UpdateStatus({ type: \"Error\", Message: `Configuring Branching Model : Failed with error ${e}` })\n            return e\n        })\n        BranchRestrictionsBody.map(e => {\n            return CreateBranchRestrictions(data.teamId, repoCreateData.uuid, e).then(val => {\n                data.UpdateStatus({ type: \"Message\", Message: `Adding Branch Restriction - Kind : ${e.kind}, branch type : ${e.branch_type} : Success` })\n                return val\n            }).catch(e => {\n                data.UpdateStatus({ type: \"Error\", Message: `Adding Branch Restriction - Kind : ${e.kind}, branch type : ${e.branch_type} : Failed with error ${e}` })\n                return e\n            })\n        })\n        Config.Bitbucket.DefaultReviewers.map(e => {\n            return AssignDefaultReviewers(data.teamId, repoCreateData.uuid, e).then(val => {\n                data.UpdateStatus({ type: \"Message\", Message: `Adding Default Reviewer ${e} : Success` })\n                return val\n            }).catch(e => {\n                data.UpdateStatus({ type: \"Error\", Message: `Adding Default Reviewer ${e} : Failed with error ${e}` })\n                return e\n            })\n        })\n        await EnablePipelines(data.teamId, repoCreateData.uuid, EnablePipelineBody).then(val => {\n            data.UpdateStatus({ type: \"Message\", Message: `Enabling Pipelines : Success` })\n            return val\n        }).catch(e => {\n            data.UpdateStatus({ type: \"Error\", Message: `Enabling Pipelines : Failed with error ${e}` })\n            return e\n        })\n        Config.Bitbucket.SSHKeys.map(e => {\n            return AddKnownHosts(data.teamId, repoCreateData.uuid, e).then(val => {\n                data.UpdateStatus({ type: \"Message\", Message: `Adding Known SSH Host - ${e.hostname} : Success` })\n                return val\n            }).catch(e => {\n                data.UpdateStatus({ type: \"Error\", Message: `Adding Known SSH Host - ${e.hostname} : Failed with error ${e}` })\n                return e\n            })\n        })\n    }\n    catch (e) {\n        throw e\n    }\n}   ","import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { CreateRepoProcess } from '../data-access/createRepoProcess'\nimport './css/createRepo.css'\nimport Paper from '@material-ui/core/Paper';\nimport ArrowBackTwoToneIcon from '@material-ui/icons/ArrowBackTwoTone';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nexport default function CreateRepo(props) {\n    const [repoDetails, setRepoDetails] = useState({org : null, account:null, project:null})\n    const [TextFieldError, setTextFieldError] = useState({\n        org : false,\n        account: false,\n        project: false\n    })\n    const [status, setStatus] = useState({\n        Message : [],\n        Error: [],\n        InProgress : false\n    })\n\n    const HandleStatusChange = Value => {\n        let NewStatus = status[Value.type]\n        NewStatus.push(Value.Message)\n        setStatus({\n            ...status,\n            [Value.type] : NewStatus\n        })\n    }\n\n    const handleInputChange = e => {\n        setRepoDetails({...repoDetails, [e.target.id]: e.target.value})\n    }\n    const startRepoCreationProcess = async () => {\n        try{\n            if(!repoDetails.org) {setTextFieldError({...TextFieldError, org: true, InvalidInput: true}); return}\n            if(!repoDetails.account) {setTextFieldError({...TextFieldError, account: true, InvalidInput: true}); return}\n            if(!repoDetails.project) {setTextFieldError({...TextFieldError, project: true, InvalidInput: true}); return}\n            setStatus({...status,InProgress:true})\n            await CreateRepoProcess({\n                teamId : props.match.params.teamId,\n                ProjectName : `${repoDetails.project.replace(/ /g, \"-\").toLowerCase()}-${repoDetails.org}`,\n                AccountName : `${repoDetails.account.toLowerCase(/ /g, \" - \")}-${repoDetails.org}`,\n                orgId : repoDetails.org,\n                UpdateStatus: HandleStatusChange\n            }).catch(e => {\n                throw e\n            }).finally(() => {\n                setStatus({...status,InProgress:false})\n            })\n        }\n        catch(e){\n            let NewError = status.Error.push(e)\n            setStatus({...status, Error: NewError, InProgress:false})\n        }\n    }\n\n    const Message = props => {\n        return (\n            <p key={props.key} className={props.className}>{props.Value}</p>\n        )\n    }\n\n    return (<>    \n        <div className=\"repoInputs\">\n            <Paper elevation={2}>\n                {/* <ArrowBackTwoToneIcon className=\"back-button\"/> */}\n                <TextField type=\"number\" error={TextFieldError.org} id=\"org\" onChange={handleInputChange} label=\"Enter Unique ID\" helperText=\"Ex : 776\" /> <br />\n                <TextField type=\"text\" error={TextFieldError.account} id=\"account\" onChange={handleInputChange} label=\"Doing Project For?\" helperText=\"Ex : Google\" /><br />\n                <TextField type=\"text\" error={TextFieldError.project} id=\"project\" onChange={handleInputChange} label=\"Enter Project Name\" helperText=\"Integration With Google Maps\" /><br />\n                <Button disabled={status.InProgress} variant=\"contained\" color=\"primary\" onClick={startRepoCreationProcess}>{status.InProgress ? <CircularProgress size={20}/> : \"Create Repo\"}</Button>\n                <div className=\"messages-panel\">\n                    {status.Message.map((e,v) => <Message className=\"statusMessage\" Value={e} key={v}/>)}\n                    {status.Error.map((e,v) => <Message className=\"errorMessage\" Value={e} key={v}/>)}\n                </div>\n            </Paper>\n        </div>\n    </>\n    );\n}","import React from 'react';\nexport default function TeamProjects(props) {\n  return (<>\n        <div className=\"teams-list\">\n            <p></p>{props.match.params.teamId}\n          </div>\n  </>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport Home from './views/Home';\nimport Team from './views/Team';\nimport CreateRepo from './views/CreateRepo';\nimport TeamProjects from './views/TeamProjects';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { userContext } from './context/userContext'\nimport './index.css'\n\nconst Base = () => {\n    const [user, setUser] = useState(null)\n\n    return (\n        <Router>\n            <userContext.Provider value={{user, setUser}}>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/team/:teamId\" component={Team} />\n            <Route exact path=\"/team/:teamId/projects\" component={TeamProjects} />\n            <Route exact path=\"/createRepo/:teamId\" component={CreateRepo} />\n            </userContext.Provider>\n        </Router>\n    )\n}\n\nReactDOM.render(<Base />, document.getElementById('root'));\nserviceWorker.unregister();\n","import axios from 'axios';\nimport {Config} from './config'\nimport qs from 'qs'\nimport {DefaultReadme, NodeReadme, HtmlJsCssReadme, PythonReadme} from '../data-access/readme-files'\n\nvar api = axios.create({\n    baseURL: \"https://api.bitbucket.org/2.0/\",\n    timeout: 10000,\n    headers: {\"Content-Type\": \"application/json\"}\n})\n\nconst CatchAxiosError = ErrorObject => {\n    if (ErrorObject.response) {\n        console.log(ErrorObject.response.headers)\n        return `'Error: Api Responded with status code ${ErrorObject.response.status} Message : ${JSON.stringify(ErrorObject.response.data)}`\n    }else {\n        return (`Error : ${ErrorObject.message}`)\n    }\n}\n\nconst GetAccesTokenFromCode = code => {\n    return api({\n        baseURL: \"https://bitbucket.org/site/oauth2/\",\n        method: \"POST\",\n        url: Config.Bitbucket.Endpoints.GetAccesTokenFromCode,\n        headers: {\n            \"Content-Type\" : \"application/x-www-form-urlencoded\",\n            \"Authorization\" : `Basic ${new Buffer(Config.Bitbucket.ClientId+\":\"+Config.Bitbucket.ClientSecret).toString(\"base64\")}`\n        },\n        data: qs.stringify({\n            grant_type : \"authorization_code\",\n            code: code\n        })\n    }).then(response  => {\n        console.log(`Setting new token : ${JSON.stringify(response.data)}`)\n        window.localStorage.setItem(Config.Bitbucket.ClientId, JSON.stringify(response.data))\n        return response.data\n    }).catch(error => {\n        throw CatchAxiosError(error)\n    })\n}\n\nconst RefreshToken = (CallbackFunction = null) => {\n    return api({\n        baseURL: \"https://bitbucket.org/site/oauth2/\",\n        method: \"POST\",\n        url: Config.Bitbucket.Endpoints.GetAccesTokenFromCode,\n        headers: {\n            \"Content-Type\" : \"application/x-www-form-urlencoded\",\n            \"Authorization\" : `Basic ${new Buffer(Config.Bitbucket.ClientId+\":\"+Config.Bitbucket.ClientSecret).toString(\"base64\")}`\n        },\n        data: qs.stringify({\n            grant_type : \"refresh_token\",\n            refresh_token: JSON.parse(window.localStorage.getItem(Config.Bitbucket.ClientId)).refresh_token\n        })\n    }).then(async response  => {\n        console.log(`Refrshing token : ${JSON.stringify(response.data)}`)\n        window.localStorage.setItem(Config.Bitbucket.ClientId, JSON.stringify(response.data))\n        if(CallbackFunction)\n            return await CallbackFunction()\n        else\n            return response.data\n    }).catch(error => {\n        throw CatchAxiosError(error)\n    })\n}\n\nconst GetTeamsOfUser = () => {\n    return api({\n        method: \"GET\",\n        url: Config.Bitbucket.Endpoints.GetTeamsOfUser,\n        headers: {\n            \"Authorization\" : `Bearer ${JSON.parse(window.localStorage.getItem(Config.Bitbucket.ClientId)).access_token}`\n        },\n        params: {\n            role: \"admin\"\n        }\n    }).then(response  => {\n        return response.data\n    }).catch(async error => {\n        if(error.response.status === 401)\n            return await RefreshToken(() => GetTeamsOfUser())\n        else\n            throw CatchAxiosError(error)\n    })\n}\n\nconst GetTeamById = teamId => {\n    return api({\n        method: \"GET\",\n        url: `${Config.Bitbucket.Endpoints.GetTeamsOfUser}/${teamId}`,\n        headers: {\n            \"Authorization\" : `Bearer ${JSON.parse(window.localStorage.getItem(Config.Bitbucket.ClientId)).access_token}`\n        },\n        params: {\n            role: \"member\"\n        }\n    }).then(response  => {\n        return response.data\n    }).catch(async error => {\n        if(error.response.status === 401)\n            return await RefreshToken(() => GetTeamById(teamId))\n        else\n            throw CatchAxiosError(error)\n    })\n}\n\nconst GetProjectsOfTeam = (teamId, pageNumber=1) => {\n    return api({\n        method: \"GET\",\n        url: `${Config.Bitbucket.Endpoints.GetTeamsOfUser}/${teamId}/projects/`,\n        headers: {\n            \"Authorization\" : `Bearer ${JSON.parse(window.localStorage.getItem(Config.Bitbucket.ClientId)).access_token}`\n        },\n        params: {\n            page: pageNumber\n        },\n    }).then(response  => {\n        return response.data\n    }).catch(async error => {\n        if(error.response.status === 401)\n            return await RefreshToken(() => GetProjectsOfTeam(teamId, pageNumber))\n        else\n            throw CatchAxiosError(error)\n    })\n}\n\nconst CreateProject = (teamId, body) => {\n    return api({\n        method: \"POST\",\n        url: `${Config.Bitbucket.Endpoints.GetTeamsOfUser}/${teamId}/projects/`,\n        headers: {\n            \"Authorization\" : `Bearer ${JSON.parse(window.localStorage.getItem(Config.Bitbucket.ClientId)).access_token}`\n        },\n        data: JSON.stringify(body),\n    }).then(response  => {\n        return response.data\n    }).catch(async error => {\n        if(error.response.status === 401)\n            return await RefreshToken(() => CreateProject(teamId, body))\n        else\n            throw CatchAxiosError(error)\n    })\n}\n\nconst GetRepoOfTeam = (teamId, pageNumber=1) => {\n    return api({\n        method: \"GET\",\n        url: `${Config.Bitbucket.Endpoints.GetRepo}/${teamId}`,\n        headers: {\n            \"Authorization\" : `Bearer ${JSON.parse(window.localStorage.getItem(Config.Bitbucket.ClientId)).access_token}`\n        },\n        params: {\n            page: pageNumber\n        },\n    }).then(response  => {\n        return response.data\n    }).catch(async error => {\n        if(error.response.status === 401)\n            return await RefreshToken(() => GetRepoOfTeam(teamId, pageNumber))\n        else\n            throw CatchAxiosError(error)\n    })\n}\n\nconst CreateRepo = (teamId, projectName,  body) => {\n    return api({\n        method: \"POST\",\n        url: `${Config.Bitbucket.Endpoints.GetRepo}/${teamId}/${projectName}`,\n        headers: {\n            \"Authorization\" : `Bearer ${JSON.parse(window.localStorage.getItem(Config.Bitbucket.ClientId)).access_token}`\n        },\n        data: JSON.stringify(body)\n    }).then(response  => {\n        return response.data\n    }).catch(async error => {\n        if(error.response.status === 401)\n            return await RefreshToken(() => CreateRepo(teamId, projectName, body))\n        else\n            throw CatchAxiosError(error)\n    })\n}\n\nconst CreateBranch = (teamId, repoId,  body) => {\n    return api({\n        method: \"POST\",\n        url: `${Config.Bitbucket.Endpoints.GetRepo}/${teamId}/${repoId}/refs/branches`,\n        headers: {\n            \"Authorization\" : `Bearer ${JSON.parse(window.localStorage.getItem(Config.Bitbucket.ClientId)).access_token}`\n        },\n        data: JSON.stringify(body)\n    }).then(response  => {\n        return response.data\n    }).catch(async error => {\n        if(error.response.status === 401)\n            return await RefreshToken(() => CreateBranch(teamId, repoId, body))\n        else\n            throw CatchAxiosError(error)\n    })\n}\n\nconst GetBranch = (teamId, repoId, pageNumber) => {\n    return api({\n        method: \"GET\",\n        url: `${Config.Bitbucket.Endpoints.GetRepo}/${teamId}/${repoId}/refs/branches`,\n        headers: {\n            \"Authorization\" : `Bearer ${JSON.parse(window.localStorage.getItem(Config.Bitbucket.ClientId)).access_token}`\n        },\n        params: {\n            page: pageNumber\n        }\n    }).then(response  => {\n        return response.data\n    }).catch(async error => {\n        if(error.response.status === 401)\n            return await RefreshToken(() => GetBranch(teamId, repoId, pageNumber))\n        else\n            throw CatchAxiosError(error)\n    })\n}\n\nconst CommitReadmeFile = (teamId, repoId) => {\n    // const blob = new Blob(['Created from automated process'], {type : 'text/markdown'})\n    // const blob = new Blob(['Created from automated process'], {type : 'text/markdown'})\n    // var formDataToPass = new FormData()\n    // formDataToPass.append('file', blob, 'success.txt')\n    return api({\n        method: \"POST\",\n        url: `${Config.Bitbucket.Endpoints.GetRepo}/${teamId}/${repoId}/src`,\n        headers: {\n            \"Content-Type\" : \"application/x-www-form-urlencoded\",\n            \"Authorization\" : `Bearer ${JSON.parse(window.localStorage.getItem(Config.Bitbucket.ClientId)).access_token}`\n        },\n        data: qs.stringify({\n            \"README.MD\" : DefaultReadme\n        })\n    }).then(response  => {\n        return response\n    }).catch(async error => {\n        if(error.response.status === 401)\n            return await RefreshToken(() => CommitReadmeFile(teamId, repoId))\n        else\n            throw CatchAxiosError(error)\n    })\n}\n\nconst ConfigureBranchingModel = (teamId, repoId, body) => {\n    return api({\n        method: \"PUT\",\n        url: `${Config.Bitbucket.Endpoints.GetRepo}/${teamId}/${repoId}/branching-model/settings`,\n        headers: {\n            \"Authorization\" : `Bearer ${JSON.parse(window.localStorage.getItem(Config.Bitbucket.ClientId)).access_token}`\n        },\n        data: JSON.stringify(body)\n    }).then(response  => {\n        return response\n    }).catch(async error => {\n        if(error.response.status === 401)\n            return await RefreshToken(() => ConfigureBranchingModel(teamId, repoId, body))\n        else\n            throw CatchAxiosError(error)\n    })\n}\n\nconst CreateBranchRestrictions = (teamId, repoId, body) => {\n    return api({\n        method: \"POST\",\n        url: `${Config.Bitbucket.Endpoints.GetRepo}/${teamId}/${repoId}/branch-restrictions`,\n        headers: {\n            \"Authorization\" : `Bearer ${JSON.parse(window.localStorage.getItem(Config.Bitbucket.ClientId)).access_token}`\n        },\n        data: JSON.stringify(body)\n    }).then(response  => {\n        return response\n    }).catch(async error => {\n        if(error.response.status === 401)\n            return await RefreshToken(() => CreateBranchRestrictions(teamId, repoId, body))\n        else\n            throw CatchAxiosError(error)\n    })\n}\n\nconst AssignDefaultReviewers = (teamId, repoId, userName) => {\n    return api({\n        method: \"PUT\",\n        url: `${Config.Bitbucket.Endpoints.GetRepo}/${teamId}/${repoId}/default-reviewers/${userName}`,\n        headers: {\n            \"Authorization\" : `Bearer ${JSON.parse(window.localStorage.getItem(Config.Bitbucket.ClientId)).access_token}`\n        },\n    }).then(response  => {\n        return response\n    }).catch(async error => {\n        if(error.response.status === 401)\n            return await RefreshToken(() => AssignDefaultReviewers(teamId, repoId, userName))\n        else\n            throw CatchAxiosError(error)\n    })\n}\n\nconst EnablePipelines = (teamId, repoId, body) => {\n    return api({\n        method: \"PUT\",\n        url: `${Config.Bitbucket.Endpoints.GetRepo}/${teamId}/${repoId}/pipelines_config`,\n        headers: {\n            \"Authorization\" : `Bearer ${JSON.parse(window.localStorage.getItem(Config.Bitbucket.ClientId)).access_token}`\n        },\n        data: JSON.stringify(body)\n    }).then(response  => {\n        return response\n    }).catch(async error => {\n        if(error.response.status === 401)\n            return await RefreshToken(() => EnablePipelines(teamId, repoId, body))\n        else\n            throw CatchAxiosError(error)\n    })\n}\n\nconst AddKnownHosts = (teamId, repoId, body) => {\n    return api({\n        method: \"POST\",\n        url: `${Config.Bitbucket.Endpoints.GetRepo}/${teamId}/${repoId}/pipelines_config/ssh/known_hosts/`,\n        headers: {\n            \"Authorization\" : `Bearer ${JSON.parse(window.localStorage.getItem(Config.Bitbucket.ClientId)).access_token}`\n        },\n        data: JSON.stringify(body)\n    }).then(response  => {\n        return response\n    }).catch(async error => {\n        if(error.response.status === 401)\n            return await RefreshToken(() => EnablePipelines(teamId, repoId, body))\n        else\n            throw CatchAxiosError(error)\n    })\n}\n\nexport {\n    GetAccesTokenFromCode, \n    GetTeamsOfUser, \n    RefreshToken, \n    GetTeamById, \n    GetProjectsOfTeam, \n    CreateProject, \n    GetRepoOfTeam, \n    CreateRepo, \n    CreateBranch, \n    GetBranch, \n    CommitReadmeFile, \n    ConfigureBranchingModel, \n    CreateBranchRestrictions, \n    AssignDefaultReviewers, \n    EnablePipelines, \n    AddKnownHosts\n}","const DefaultReadme = `\n**This Repository was created using an Automated Process\n\n**Edit a file, create a new file, and clone from Bitbucket in under 2 minutes**\n\nWhen you're done, you can delete the content in this README and update the file with details for others getting started with your repository.\n\n*We recommend that you open this README in another tab as you perform the tasks below. You can [watch our video](https://youtu.be/0ocf7u76WSo) for a full demo of all the steps in this tutorial. Open the video in a new tab to avoid leaving Bitbucket.*\n\n---\n\n## Edit a file\n\nYou'll start by editing this README file to learn how to edit a file in Bitbucket.\n\n1. Click **Source** on the left side.\n2. Click the README.md link from the list of files.\n3. Click the **Edit** button.\n4. Delete the following text: *Delete this line to make a change to the README from Bitbucket.*\n5. After making your change, click **Commit** and then **Commit** again in the dialog. The commit page will open and youâ€™ll see the change you just made.\n6. Go back to the **Source** page.\n\n---\n\n## Create a file\n\nNext, youâ€™ll add a new file to this repository.\n\n1. Click the **New file** button at the top of the **Source** page.\n2. Give the file a filename of **contributors.txt**.\n3. Enter your name in the empty file space.\n4. Click **Commit** and then **Commit** again in the dialog.\n5. Go back to the **Source** page.\n\nBefore you move on, go ahead and explore the repository. You've already seen the **Source** page, but check out the **Commits**, **Branches**, and **Settings** pages.\n\n---\n\n## Clone a repository\n\nUse these steps to clone from SourceTree, our client for using the repository command-line free. Cloning allows you to work on your files locally. If you don't yet have SourceTree, [download and install first](https://www.sourcetreeapp.com/). If you prefer to clone from the command line, see [Clone a repository](https://confluence.atlassian.com/x/4whODQ).\n\n1. Youâ€™ll see the clone button under the **Source** heading. Click that button.\n2. Now click **Check out in SourceTree**. You may need to create a SourceTree account or log in.\n3. When you see the **Clone New** dialog in SourceTree, update the destination path and name if youâ€™d like to and then click **Clone**.\n4. Open the directory you just created to see your repositoryâ€™s files.\n\nNow that you're more familiar with your Bitbucket repository, go ahead and add a new file locally. You can [push your change back to Bitbucket with SourceTree](https://confluence.atlassian.com/x/iqyBMg), or you can [add, commit,](https://confluence.atlassian.com/x/8QhODQ) and [push from the command line](https://confluence.atlassian.com/x/NQ0zDQ).\n`\n\nconst NodeReadme = ``\n\nconst PythonReadme = ``\n\nconst HtmlJsCssReadme = ``\n\nexport {\n    DefaultReadme,\n    NodeReadme,\n    PythonReadme,\n    HtmlJsCssReadme\n}","import {KnownHosts} from './ssh-known-hosts'\nexport const Config = {\n    Bitbucket:{\n        ClientId: \"GHQKwpgP7FUKnBzBse\",\n        ClientSecret: \"HdxZpErr4Ljn5faH7WKsVjN9Jxn8VL6H\",\n        Endpoints: {\n            GetAccesTokenFromCode : \"access_token\",\n            GetTeamsOfUser : \"teams\",\n            GetRepo : \"repositories\",\n        },\n        DefaultReviewers: [\"{147490bf-8438-4a4a-804a-6c6197fc542a}\", \"{40b7dd35-e181-4e04-8aef-43bac1eddf47}\"],\n        SSHKeys: KnownHosts\n    }\n}","export const KnownHosts = [\n    {\n      \"type\": \"pipeline_known_host\",\n      \"hostname\": \"54.247.163.119\",\n      \"public_key\": {\n        \"type\": \"pipeline_ssh_public_key\",\n        \"key_type\": \"ssh-rsa\",\n        \"key\": \"AAAAB3NzaC1yc2EAAAADAQABAAABAQCwkRuiyBCBawo63/PwFslOtexjoQZX3aep4gOvYwEpocxUugDQBreYBtN0bYq7SahZMMZxV8Vfj/V7GQjFNIEU0qPgncjeKteP1V65aiYOrS6V1s6hA1QGD9IIHagJw5QV1bONctacOnBuYmcSpQuaeteoOTtG9c8DXLBMADkQibTFMFHuxA6gK0GiLIDelPJGnDaD5V1fvFRvU+tnMOcN3Lr1p7nY7QOhzrQjeoyJIRvNu1/OqHVxbaH0hRshCq7JihriXNJHbwGRGteXD1Ak1Yv1o0ZvWd7JOswkHtghNe4G9YBE49YLrDHI5OsHaumpzgCyPs8PYnvrb3zG9PXP\",\n        \"md5_fingerprint\": \"md5:33:78:d7:5b:5b:35:b4:33:c7:67:f6:23:66:a2:02:48\",\n        \"sha256_fingerprint\": \"SHA256:xYS1/jXyScRsQ2W9i3vxoOPcRly4BG1+mRQPPVUF8ZY\"\n      }\n    },\n    {\n      \"type\": \"pipeline_known_host\",\n      \"hostname\": \"52.66.49.250\",\n      \"public_key\": {\n        \"type\": \"pipeline_ssh_public_key\",\n        \"key_type\": \"ecdsa-sha2-nistp256\",\n        \"key\": \"AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBKHF9xkRNAM70oouK9k0rRvUQckJklYGIfO8a3ILEbMBYzaHzBnSGsqeOfv5swbieToAwaIUJbueDWDnA7hqjYI=\",\n        \"md5_fingerprint\": \"md5:7e:95:9a:d4:d3:24:7e:74:41:72:af:52:94:29:49:02\",\n        \"sha256_fingerprint\": \"SHA256:RSOdyoAdhDaKJzh19kjZwYK3VNwb1hDCzpYJyCRxiwY\"\n      }\n    },\n    {\n      \"type\": \"pipeline_known_host\",\n      \"hostname\": \"52.66.85.71\",\n      \"public_key\": {\n        \"type\": \"pipeline_ssh_public_key\",\n        \"key_type\": \"ssh-rsa\",\n        \"key\": \"AAAAB3NzaC1yc2EAAAADAQABAAABAQC9cStjWWXEC77pJl7NZeNL/gpfGIY7OSShp2LZ3qy/75vFgJNJ+XkSvbrWflNCtMyL/ccL6RpfD+NdHfji+3Sdg8rUye+Bxku9oxbjxBwV9iAtaDU/JRy4uBGab6zUg4a0cNUyDWIoT0eVdEe0zKGGZzR5dKzB7attxY+A+pCid3qguShl3MqI+YZS6L/EYgR2wNP8MPcO+7zlwZdlOSUMiZXqCFyvokaFlrtIadpDjSumMAFg6gL9frNu+ylnyPatgM9CiIge9gI/FT3keFPM13LfeLHKVDmAz81ublmGWy72qSp4fKr4MWH08jNx8jgUc0bnE+0uWOG2pbdPoJAH\",\n        \"md5_fingerprint\": \"md5:29:2e:8c:7a:b5:ee:a6:10:55:41:ae:87:92:d6:8b:24\",\n        \"sha256_fingerprint\": \"SHA256:9aLSU6BlAkrj3Ey3dp5dJ9gujNLjFbaByNJPQ1NjcRg\"\n      }\n    },\n    {\n      \"type\": \"pipeline_known_host\",\n      \"hostname\": \"52.19.38.51\",\n      \"public_key\": {\n        \"type\": \"pipeline_ssh_public_key\",\n        \"key_type\": \"ecdsa-sha2-nistp256\",\n        \"key\": \"AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBJEtT3A0XXuUYM05BK+KrLHp+CzBxAQQSbDqQ8iXQRDgSf63ffqXmDPb/46unh8/0E3civcUdsHGOuflUcuWQBs=\",\n        \"md5_fingerprint\": \"md5:7a:42:17:ff:31:98:a1:55:05:0f:72:24:9a:f5:50:99\",\n        \"sha256_fingerprint\": \"SHA256:W8K8vt90bbUKPp4jBUu4k2+UtCivMyUbENtbnucF2qk\"\n      }\n    },\n    {\n      \"type\": \"pipeline_known_host\",\n      \"hostname\": \"52.18.209.127\",\n      \"public_key\": {\n        \"type\": \"pipeline_ssh_public_key\",\n        \"key_type\": \"ecdsa-sha2-nistp256\",\n        \"key\": \"AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBF1UhD9BB72gs/Ro+ZmtN8zmr0lCJH3xEYBJM07C7NdTk5eTEHWu27sIi2wz7TEWFcaWI4bgB9JoCaUPSbKdh28=\",\n        \"md5_fingerprint\": \"md5:22:89:0e:f9:f6:11:07:81:9a:08:81:3c:c3:95:ac:63\",\n        \"sha256_fingerprint\": \"SHA256:XUZ8oP6HRlgr3tpA3uQBfeIJpoQxW5af/YU3yx+EIho\"\n      }\n    }\n  ]"],"sourceRoot":""}